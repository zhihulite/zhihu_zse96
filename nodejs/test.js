// NodeJS 调用示例
// 获取 zst82 zst81 生成游客凭证 请求知乎api示例
// 作者: huajiqaq
// 日期: 2025-08-08
//
// 注意事项:
// 1. 部分数据应持久化保存，例如随机生成的 OAID guid，以及请求获取的 udid zst82 以及 zst81。
// 2. udid 为 游客凭证的返回参数，应在游客登录后持久化保存。本示例并未配备登录参数获取，如需登录则不需请求游客登录保存 udid ，获取参数请使用油猴脚本获取，详见同目录下 [知乎网页登录数据收集示例.js] 。
// 3. zst82 zst81 获取仅是简化实现，原始实现包含大量环境信息上传，本示例仅模拟知乎APP开启"仅浏览"模式后的参数获取。
// 4. ZhihuRequest 类 要求强制 loginData 包含 udid 参数，如无 udid，请手动在 loginData 对象中添加 udid 属性。
//

const crypto = require('crypto');
const LAESUtils = require('./laes_utils');
function init_LAESUtils() {
    var encryptConf = {
        'key_schedule': [0xe1, 0xc6, 0xfc, 0xd7, 0x71, 0x61, 0x5d, 0x48, 0xac, 0xb9, 0x85, 0x9f, 0x10, 0x35, 0x0f, 0x2b, 0xfe, 0xa1, 0xe7, 0x55, 0xb0, 0x3c, 0xde, 0x97, 0xc4, 0x76, 0x12, 0x4c, 0x86, 0x6e, 0x2f, 0x0f, 0x9f, 0x3e, 0x49, 0x1a, 0x29, 0xac, 0x8e, 0xf8, 0x65, 0x08, 0x5b, 0xe1, 0xd4, 0xcb, 0xba, 0x7e, 0x42, 0x6b, 0x97, 0x87, 0x01, 0xcd, 0x10, 0xe7, 0x3d, 0x2d, 0xdb, 0xfc, 0x50, 0xa9, 0x78, 0xb8, 0x34, 0x9b, 0x6f, 0x02, 0x88, 0xf6, 0x2f, 0xa9, 0x46, 0x1f, 0x78, 0xc6, 0xb6, 0xe5, 0xd6, 0x58, 0x69, 0x45, 0x3d, 0x23, 0x1c, 0xef, 0x0b, 0xc6, 0x90, 0x83, 0xbe, 0xac, 0x7d, 0xf4, 0x5b, 0xd0, 0xce, 0xe9, 0xa4, 0xbc, 0x5d, 0x40, 0x7a, 0x61, 0xf1, 0xdf, 0x28, 0x3d, 0x04, 0x96, 0x1e, 0x81, 0xa6, 0xf5, 0xcb, 0x78, 0xde, 0x93, 0xb7, 0x30, 0xea, 0x51, 0x09, 0x63, 0x28, 0x4c, 0x8d, 0x19, 0x79, 0x5e, 0xb9, 0xa4, 0xe5, 0x13, 0xc2, 0x05, 0xdb, 0xfb, 0x31, 0x25, 0x6c, 0x8f, 0x4d, 0x92, 0xba, 0xdb, 0x76, 0xc9, 0xfc, 0x86, 0xab, 0x20, 0x5b, 0xe0, 0x6a, 0x0d, 0x36, 0x1e, 0x9c, 0x40, 0x27, 0x81, 0x09, 0x65, 0x9a, 0xdd, 0x3c, 0xb5, 0x16, 0x40, 0xc1, 0x73, 0xae, 0x58, 0xfa, 0xe3, 0x02, 0x18, 0x2a, 0x38, 0x45, 0x54, 0x62, 0x73, 0x8d, 0x9a, 0xa9, 0xb9, 0xca, 0xd7, 0xe6, 0xf2, 0x8b, 0x2c, 0x1d, 0x44, 0x39, 0xb2, 0x96, 0xd5, 0x04, 0x68, 0xe5, 0x5d, 0xfd, 0x77, 0xa1, 0xc4, 0x14, 0x06, 0x81, 0x96, 0x6e, 0x72, 0x42, 0x5b, 0x2c, 0x39, 0xf9, 0xd1, 0xe9, 0xb9, 0xc9, 0xa3, 0x57, 0x79, 0xdf, 0xfe, 0xc2, 0x02, 0xed, 0x1e, 0xb6, 0xa7, 0x96, 0x89, 0x41, 0x25, 0x6a, 0x3c, 0xd5, 0xb0, 0x5f, 0xea, 0xaa, 0x20, 0xfa, 0x84, 0x78, 0xc8, 0x4b, 0x17, 0x9f, 0x08, 0x3e, 0x6c],
        's_box': [0xbb, 0xdb, 0x76, 0xc1, 0xfa, 0x87, 0xa3, 0x20, 0x52, 0xed, 0x63, 0x00, 0x3e, 0x19, 0x95, 0x49, 0xd1, 0xbd, 0x52, 0xe3, 0xad, 0x2d, 0xfa, 0x84, 0x76, 0xcf, 0x45, 0x1b, 0x95, 0x02, 0x39, 0x65, 0x7a, 0x57, 0xbf, 0xa6, 0xe0, 0x12, 0xc5, 0x0d, 0xde, 0xf6, 0x36, 0x2f, 0x64, 0x8f, 0x43, 0x9b, 0xc7, 0xe9, 0xaf, 0xba, 0x50, 0x4c, 0x7f, 0x64, 0xf0, 0xdf, 0x25, 0x3c, 0x0a, 0x92, 0x16, 0x87, 0xfb, 0xaf, 0xe5, 0x5f, 0xbc, 0x3f, 0xd6, 0x9e, 0xc7, 0x7c, 0x12, 0x4d, 0x80, 0x63, 0x21, 0x0a, 0x88, 0x29, 0x1d, 0x43, 0x30, 0xbf, 0x98, 0xdc, 0x09, 0x64, 0xe7, 0x56, 0xf4, 0x7f, 0xab, 0xc5, 0xa0, 0xf3, 0xc2, 0x71, 0xda, 0x90, 0xb2, 0x3e, 0xe9, 0x53, 0x0a, 0x65, 0x2d, 0x49, 0x86, 0x1e, 0x2b, 0x8f, 0x0c, 0x6b, 0x97, 0xd5, 0x39, 0xb4, 0x19, 0x47, 0xcc, 0x79, 0xa6, 0x52, 0xff, 0xe0, 0x58, 0x7d, 0xd8, 0xff, 0xcd, 0x03, 0xeb, 0x11, 0xb3, 0xa7, 0x9d, 0x87, 0x4f, 0x20, 0x62, 0x35, 0xe9, 0xcd, 0xfe, 0xdd, 0x7e, 0x68, 0x59, 0x47, 0xa9, 0xbf, 0x84, 0x9c, 0x1c, 0x3e, 0x02, 0x2b, 0x6d, 0x43, 0x3e, 0x27, 0x18, 0xe5, 0x06, 0xc7, 0x90, 0x85, 0xbc, 0xad, 0x78, 0xf0, 0x52, 0xd4, 0x0a, 0x1f, 0x2d, 0x3e, 0x45, 0x55, 0x6b, 0x72, 0x8a, 0x9e, 0xa8, 0xb6, 0xc5, 0xd4, 0xe6, 0xfd, 0x39, 0x92, 0x66, 0x05, 0x82, 0xf7, 0x2f, 0xa0, 0x4e, 0x17, 0x78, 0xc2, 0xbc, 0xeb, 0xd4, 0x50, 0x19, 0x07, 0x8d, 0x90, 0x64, 0x79, 0x4f, 0x5c, 0x25, 0x3e, 0xf6, 0xdc, 0xe4, 0xbb, 0xc9, 0xa9, 0x9e, 0x35, 0x40, 0x16, 0x29, 0xa4, 0x80, 0xf5, 0x63, 0x02, 0x5a, 0xe9, 0xdf, 0xc4, 0xbf, 0x72, 0x4f, 0x66, 0x94, 0x8d, 0x02, 0xc7, 0x16, 0xea, 0x31, 0x2e, 0xdb, 0xf3, 0x5d, 0xa8, 0x75, 0xb4],
        'round_constants': [0x09, 0x6E, 0x11, 0xFC, 0x8C, 0x53, 0xE8, 0x3B, 0x74, 0x95, 0xC2, 0x28, 0xD2, 0x46, 0xB3, 0xAB, 0x6D, 0x08, 0x75, 0x97, 0xEB, 0x38, 0x87, 0x53, 0x16, 0xF4, 0xAD, 0x4F, 0xBC, 0x26, 0xD2, 0xCD, 0x1E, 0x7A, 0x0E, 0xEE, 0x97, 0x4C, 0xF0, 0x28, 0x69, 0x82, 0xDC, 0x35, 0xC0, 0x5B, 0xA7, 0xB6, 0xFC, 0x9D, 0xE6, 0x02, 0x79, 0xAB, 0x1B, 0xC4, 0x85, 0x60, 0x3F, 0xD5, 0x2D, 0xB2, 0x4B, 0x5A, 0x8B, 0xEC, 0x90, 0x7D, 0x04, 0xD7, 0x62, 0xB2, 0xF0, 0x1E, 0x4B, 0xA8, 0x57, 0xC9, 0x30, 0x2A, 0x51, 0x32, 0x4A, 0xA5, 0xD0, 0x0E, 0xBB, 0x68, 0x2C, 0xCE, 0x9F, 0x76, 0x80, 0x1A, 0xE8, 0xFE, 0xE3, 0x82, 0xF6, 0x14, 0x62, 0xB3, 0x0B, 0xD1, 0x94, 0x76, 0x24, 0xC2, 0x33, 0xA2, 0x5B, 0x49, 0x3F, 0x54, 0x2C, 0xCB, 0xB1, 0x62, 0xD1, 0x0B, 0x4B, 0xAF, 0xFB, 0x1A, 0xE2, 0x74, 0x81, 0x94, 0x75, 0x17, 0x68, 0x85, 0xF6, 0x2A, 0x95, 0x49, 0x07, 0xE0, 0xBF, 0x5F, 0xAB, 0x34, 0xC5, 0xD6, 0x93, 0xFC, 0x83, 0x6E, 0x1C, 0xC6, 0x74, 0xA2, 0xE8, 0x0D, 0x58, 0xBE, 0x47, 0xDA, 0x22, 0x31, 0xC9, 0xAA, 0xD9, 0x37, 0x43, 0x94, 0x2E, 0xF8, 0xBE, 0x59, 0x0A, 0xE6, 0x14, 0x88, 0x79, 0x68, 0x22, 0x45, 0x3A, 0xDD, 0xA3, 0x7C, 0xCF, 0x11, 0x57, 0xB1, 0xE8, 0x03, 0xFD, 0x6C, 0x9E, 0x88, 0xDC, 0xB5, 0xCD, 0x29, 0x56, 0x86, 0x3C, 0xED, 0xAA, 0x4A, 0x1B, 0xFB, 0x0D, 0x97, 0x65, 0x72, 0x4C, 0x28, 0x5D, 0xB0, 0xCF, 0x13, 0xA0, 0x76, 0x35, 0xD1, 0x82, 0x64, 0x95, 0x0E, 0xFB, 0xE8, 0xB3, 0xDE, 0xA6, 0x40, 0x39, 0xE2, 0x50, 0x86, 0xCB, 0x2F, 0x70, 0x9C, 0x69, 0xF3, 0x02, 0x1A, 0xAF, 0xC0, 0xB4, 0x55, 0x20, 0xFE, 0x49, 0x93, 0xDE, 0x38, 0x61, 0x84, 0x76, 0xE7, 0x1E, 0x01],
        'dict1': { 0: '0C1717DA', 4: 'F08A8A36', 8: 'C89A9A19', 12: '3F9797DE', 16: '574D4D35', 20: 'F48C8C38', 24: '72D6D65C', 28: '1D6D6DFB', 32: '4C8787CA', 36: 'C5CBCBB5', 40: '428F8FC9', 44: '1C6868F4', 48: 'D56B6B45', 52: '52AFAFE9', 56: '13F9F96D', 60: '3CC8C804', 64: '01B6B60F', 68: 'D26F6F49', 72: '6236367C', 76: '270D0D75', 80: '24D9D987', 84: '982A2AF9', 88: '61EFEF86', 92: '7E020224', 96: 'C6939317', 100: '7309092D', 104: '584A4A39', 108: '106A6AF6', 112: '3E9292D4', 116: '448989C7', 120: '11FFFF66', 124: '534C4C30', 128: 'D4696947', 132: 'B3B9B9BD', 136: 'DA626243', 140: '9C57576A', 144: '29DEDE80', 148: 'AC37372A', 152: '6A35357E', 156: 'FE7272E4', 160: '051B1BD5', 164: '7CD8D854', 168: 'F37979ED', 172: 'B1BFBFB6', 176: '389494DC', 180: '7F07072E', 184: 'B8B4B4BC', 188: '2B010171', 192: '35C1C102', 196: '7AD5D55E', 200: '77000022', 204: '4B717191', 208: '8DADAD9B', 212: '6D3D3D7B', 216: '196363FD', 220: '75D1D152', 224: '041919D7', 228: '22DFDF89', 232: '884444CC', 236: 'AD303021', 240: '84ACAC98', 244: '26030377', 248: 'B913131D', 252: 'A7EDED55', 256: '5DA0A0E1', 260: 'AFE8E853', 264: '603A3A76', 268: '5B414131', 272: '32C6C60C', 276: '972D2DF5', 280: 'DFF8F8A3', 284: 'BBBBBBBB', 288: 'E95353AD', 292: '5E45453A', 296: 'D1F6F6AF', 300: '8E4242C4', 304: '146C6CF8', 308: '1A6565FE', 312: '9D505061', 316: 'FB7B7BEB', 320: '156161F2', 324: 'A1E6E65F', 328: 'A8EAEA59', 332: 'F983833D', 336: '50A4A4EF', 340: '6C383874', 344: '68E4E48C', 348: 'E329294D', 352: 'C2CFCFB9', 356: 'FD8D8D3B', 360: 'CF989813', 364: 'A4393927', 368: '0BB1B101', 372: '864E4EC8', 376: 'D6F3F3A7', 380: 'B01A1A16', 384: 'CB919111', 388: '65313172', 392: '46737397', 396: 'BA15151E', 400: '498E8EC0', 404: '230C0C70', 408: 'DEF5F5AA', 412: 'F87474EC', 416: '319F9FD6', 420: 'D96E6E40', 424: 'E05A5AA6', 428: 'EC5858A4', 432: 'BC181814', 436: '80AAAA96', 440: '925F5F69', 444: '2106067F', 448: '30CACA06', 452: 'E12F2F46', 456: 'F67E7EE8', 460: 'E7202042', 464: '932C2CF0', 468: 'CDC0C0B1', 472: '379090D2', 476: '2AD2D283', 480: 'A034342F', 484: '126666FC', 488: '85A1A192', 492: '94595967', 496: '7804042C', 500: '408484CF', 504: 'C4C9C9B7', 508: 'E62E2E48', 512: 'EF27274E', 516: 'DC67674A', 520: '0FB8B803', 524: 'A23F3F29', 528: 'B6BEBEB8', 532: '6FE7E78E', 536: '2DD0D081', 540: '9F2828F3', 544: 'F286863C', 548: '5146463F', 552: '20D4D48F', 556: 'A53B3B25', 560: 'C79D9D15', 564: '5AA2A2E3', 568: 'F17F7FE6', 572: 'D7FDFDA5', 576: '4A8282C3', 580: 'E25656AC', 584: 'B41C1C18', 588: 'CAC2C2B3', 592: '70DADA56', 596: 'F77070E2', 600: '7B0B0B2B', 604: '1BFBFB6B', 608: '8CA8A894', 612: 'C0C4C4BF', 616: '34CCCC08', 620: '874040C2', 624: '5CA7A7EA', 628: '995E5E60', 632: '9B2121F1', 636: '2CD7D78A', 640: '962323F7', 644: '67E0E082', 648: '66EEEE88', 652: '280A0A79', 656: 'BEB2B2B4', 660: 'ED5D5DAB', 664: '091E1ED0', 668: '9054546F', 672: '834949CD', 676: '06B3B307', 680: 'DD606041', 684: '3B9B9BDB', 688: '79D3D35D', 692: 'E824244C', 696: 'C9CECEB0', 700: 'DBF1F1A1', 704: 'C196961F', 708: 'EB2B2B4B', 712: 'CE95951A', 716: 'FA85853E', 720: 'AEE5E55A', 724: '4E75759A', 728: '39C3C30D', 732: '339999DD', 736: '63E9E98D', 740: 'D064644F', 744: '54A9A9E7', 748: '6EE2E284', 752: '369E9ED8', 756: 'B7B0B0B2', 760: 'A3ECEC50', 764: 'CCC7C7BA', 768: '4D8080C1', 772: '17F0F062', 776: '08BABA09', 780: 'EA5555AE', 784: 'A93E3E20', 788: '03BCBC00', 792: '955B5B65', 796: 'BD1D1D1B', 800: '487A7A99', 804: 'ABE1E151', 808: '814F4FC6', 812: 'B216161C', 816: '760E0E28', 820: '7DDDDD5B', 824: '1FF7F76E', 828: 'E45C5CA8', 832: '0D1010D1', 836: '16FEFE68', 840: '82A6A69C', 844: '0EB5B50A', 848: '4F787893', 852: '710F0F26', 856: '89A3A39D', 860: 'D3FCFCA0', 864: 'E55151A2', 868: 'B5111112', 872: '56434337', 876: '6BEBEB8B', 880: '8AA5A59E', 884: '6933337D', 888: '25DBDB85', 892: 'FF7777EE', 896: '643C3C78', 900: '18F4F46C', 904: '3AC5C50E', 908: '74DCDC58', 912: 'D8FAFAA9', 916: 'C39C9C10', 920: '8B4B4BCB', 924: 'FC888834', 928: 'BFB7B7BE', 932: '001414DF', 936: '912626FF', 940: '55ABABE5', 944: 'F5818132', 948: '3DCDCD0B', 952: 'EE222244', 956: '1EF2F264', 960: '0A1212D3', 964: '8F4747CE', 968: '2F080873', 972: '437C7C90', 976: 'A6E3E357', 980: '9A525263', 984: '477D7D95', 988: '4176769F', 992: '59AEAEE0', 996: '458B8BC5', 1000: 'AA323223', 1004: '07BDBD05', 1008: '021F1FD9', 1012: '9E2525FA', 1016: '5F484833', 1020: '2E05057A' },
        'dict2': { 0: 'DA0C1717', 4: '36F08A8A', 8: '19C89A9A', 12: 'DE3F9797', 16: '35574D4D', 20: '38F48C8C', 24: '5C72D6D6', 28: 'FB1D6D6D', 32: 'CA4C8787', 36: 'B5C5CBCB', 40: 'C9428F8F', 44: 'F41C6868', 48: '45D56B6B', 52: 'E952AFAF', 56: '6D13F9F9', 60: '043CC8C8', 64: '0F01B6B6', 68: '49D26F6F', 72: '7C623636', 76: '75270D0D', 80: '8724D9D9', 84: 'F9982A2A', 88: '8661EFEF', 92: '247E0202', 96: '17C69393', 100: '2D730909', 104: '39584A4A', 108: 'F6106A6A', 112: 'D43E9292', 116: 'C7448989', 120: '6611FFFF', 124: '30534C4C', 128: '47D46969', 132: 'BDB3B9B9', 136: '43DA6262', 140: '6A9C5757', 144: '8029DEDE', 148: '2AAC3737', 152: '7E6A3535', 156: 'E4FE7272', 160: 'D5051B1B', 164: '547CD8D8', 168: 'EDF37979', 172: 'B6B1BFBF', 176: 'DC389494', 180: '2E7F0707', 184: 'BCB8B4B4', 188: '712B0101', 192: '0235C1C1', 196: '5E7AD5D5', 200: '22770000', 204: '914B7171', 208: '9B8DADAD', 212: '7B6D3D3D', 216: 'FD196363', 220: '5275D1D1', 224: 'D7041919', 228: '8922DFDF', 232: 'CC884444', 236: '21AD3030', 240: '9884ACAC', 244: '77260303', 248: '1DB91313', 252: '55A7EDED', 256: 'E15DA0A0', 260: '53AFE8E8', 264: '76603A3A', 268: '315B4141', 272: '0C32C6C6', 276: 'F5972D2D', 280: 'A3DFF8F8', 284: 'BBBBBBBB', 288: 'ADE95353', 292: '3A5E4545', 296: 'AFD1F6F6', 300: 'C48E4242', 304: 'F8146C6C', 308: 'FE1A6565', 312: '619D5050', 316: 'EBFB7B7B', 320: 'F2156161', 324: '5FA1E6E6', 328: '59A8EAEA', 332: '3DF98383', 336: 'EF50A4A4', 340: '746C3838', 344: '8C68E4E4', 348: '4DE32929', 352: 'B9C2CFCF', 356: '3BFD8D8D', 360: '13CF9898', 364: '27A43939', 368: '010BB1B1', 372: 'C8864E4E', 376: 'A7D6F3F3', 380: '16B01A1A', 384: '11CB9191', 388: '72653131', 392: '97467373', 396: '1EBA1515', 400: 'C0498E8E', 404: '70230C0C', 408: 'AADEF5F5', 412: 'ECF87474', 416: 'D6319F9F', 420: '40D96E6E', 424: 'A6E05A5A', 428: 'A4EC5858', 432: '14BC1818', 436: '9680AAAA', 440: '69925F5F', 444: '7F210606', 448: '0630CACA', 452: '46E12F2F', 456: 'E8F67E7E', 460: '42E72020', 464: 'F0932C2C', 468: 'B1CDC0C0', 472: 'D2379090', 476: '832AD2D2', 480: '2FA03434', 484: 'FC126666', 488: '9285A1A1', 492: '67945959', 496: '2C780404', 500: 'CF408484', 504: 'B7C4C9C9', 508: '48E62E2E', 512: '4EEF2727', 516: '4ADC6767', 520: '030FB8B8', 524: '29A23F3F', 528: 'B8B6BEBE', 532: '8E6FE7E7', 536: '812DD0D0', 540: 'F39F2828', 544: '3CF28686', 548: '3F514646', 552: '8F20D4D4', 556: '25A53B3B', 560: '15C79D9D', 564: 'E35AA2A2', 568: 'E6F17F7F', 572: 'A5D7FDFD', 576: 'C34A8282', 580: 'ACE25656', 584: '18B41C1C', 588: 'B3CAC2C2', 592: '5670DADA', 596: 'E2F77070', 600: '2B7B0B0B', 604: '6B1BFBFB', 608: '948CA8A8', 612: 'BFC0C4C4', 616: '0834CCCC', 620: 'C2874040', 624: 'EA5CA7A7', 628: '60995E5E', 632: 'F19B2121', 636: '8A2CD7D7', 640: 'F7962323', 644: '8267E0E0', 648: '8866EEEE', 652: '79280A0A', 656: 'B4BEB2B2', 660: 'ABED5D5D', 664: 'D0091E1E', 668: '6F905454', 672: 'CD834949', 676: '0706B3B3', 680: '41DD6060', 684: 'DB3B9B9B', 688: '5D79D3D3', 692: '4CE82424', 696: 'B0C9CECE', 700: 'A1DBF1F1', 704: '1FC19696', 708: '4BEB2B2B', 712: '1ACE9595', 716: '3EFA8585', 720: '5AAEE5E5', 724: '9A4E7575', 728: '0D39C3C3', 732: 'DD339999', 736: '8D63E9E9', 740: '4FD06464', 744: 'E754A9A9', 748: '846EE2E2', 752: 'D8369E9E', 756: 'B2B7B0B0', 760: '50A3ECEC', 764: 'BACCC7C7', 768: 'C14D8080', 772: '6217F0F0', 776: '0908BABA', 780: 'AEEA5555', 784: '20A93E3E', 788: '0003BCBC', 792: '65955B5B', 796: '1BBD1D1D', 800: '99487A7A', 804: '51ABE1E1', 808: 'C6814F4F', 812: '1CB21616', 816: '28760E0E', 820: '5B7DDDDD', 824: '6E1FF7F7', 828: 'A8E45C5C', 832: 'D10D1010', 836: '6816FEFE', 840: '9C82A6A6', 844: '0A0EB5B5', 848: '934F7878', 852: '26710F0F', 856: '9D89A3A3', 860: 'A0D3FCFC', 864: 'A2E55151', 868: '12B51111', 872: '37564343', 876: '8B6BEBEB', 880: '9E8AA5A5', 884: '7D693333', 888: '8525DBDB', 892: 'EEFF7777', 896: '78643C3C', 900: '6C18F4F4', 904: '0E3AC5C5', 908: '5874DCDC', 912: 'A9D8FAFA', 916: '10C39C9C', 920: 'CB8B4B4B', 924: '34FC8888', 928: 'BEBFB7B7', 932: 'DF001414', 936: 'FF912626', 940: 'E555ABAB', 944: '32F58181', 948: '0B3DCDCD', 952: '44EE2222', 956: '641EF2F2', 960: 'D30A1212', 964: 'CE8F4747', 968: '732F0808', 972: '90437C7C', 976: '57A6E3E3', 980: '639A5252', 984: '95477D7D', 988: '9F417676', 992: 'E059AEAE', 996: 'C5458B8B', 1000: '23AA3232', 1004: '0507BDBD', 1008: 'D9021F1F', 1012: 'FA9E2525', 1016: '335F4848', 1020: '7A2E0505' },
        'dict3': { 0: '17DA0C17', 4: '8A36F08A', 8: '9A19C89A', 12: '97DE3F97', 16: '4D35574D', 20: '8C38F48C', 24: 'D65C72D6', 28: '6DFB1D6D', 32: '87CA4C87', 36: 'CBB5C5CB', 40: '8FC9428F', 44: '68F41C68', 48: '6B45D56B', 52: 'AFE952AF', 56: 'F96D13F9', 60: 'C8043CC8', 64: 'B60F01B6', 68: '6F49D26F', 72: '367C6236', 76: '0D75270D', 80: 'D98724D9', 84: '2AF9982A', 88: 'EF8661EF', 92: '02247E02', 96: '9317C693', 100: '092D7309', 104: '4A39584A', 108: '6AF6106A', 112: '92D43E92', 116: '89C74489', 120: 'FF6611FF', 124: '4C30534C', 128: '6947D469', 132: 'B9BDB3B9', 136: '6243DA62', 140: '576A9C57', 144: 'DE8029DE', 148: '372AAC37', 152: '357E6A35', 156: '72E4FE72', 160: '1BD5051B', 164: 'D8547CD8', 168: '79EDF379', 172: 'BFB6B1BF', 176: '94DC3894', 180: '072E7F07', 184: 'B4BCB8B4', 188: '01712B01', 192: 'C10235C1', 196: 'D55E7AD5', 200: '00227700', 204: '71914B71', 208: 'AD9B8DAD', 212: '3D7B6D3D', 216: '63FD1963', 220: 'D15275D1', 224: '19D70419', 228: 'DF8922DF', 232: '44CC8844', 236: '3021AD30', 240: 'AC9884AC', 244: '03772603', 248: '131DB913', 252: 'ED55A7ED', 256: 'A0E15DA0', 260: 'E853AFE8', 264: '3A76603A', 268: '41315B41', 272: 'C60C32C6', 276: '2DF5972D', 280: 'F8A3DFF8', 284: 'BBBBBBBB', 288: '53ADE953', 292: '453A5E45', 296: 'F6AFD1F6', 300: '42C48E42', 304: '6CF8146C', 308: '65FE1A65', 312: '50619D50', 316: '7BEBFB7B', 320: '61F21561', 324: 'E65FA1E6', 328: 'EA59A8EA', 332: '833DF983', 336: 'A4EF50A4', 340: '38746C38', 344: 'E48C68E4', 348: '294DE329', 352: 'CFB9C2CF', 356: '8D3BFD8D', 360: '9813CF98', 364: '3927A439', 368: 'B1010BB1', 372: '4EC8864E', 376: 'F3A7D6F3', 380: '1A16B01A', 384: '9111CB91', 388: '31726531', 392: '73974673', 396: '151EBA15', 400: '8EC0498E', 404: '0C70230C', 408: 'F5AADEF5', 412: '74ECF874', 416: '9FD6319F', 420: '6E40D96E', 424: '5AA6E05A', 428: '58A4EC58', 432: '1814BC18', 436: 'AA9680AA', 440: '5F69925F', 444: '067F2106', 448: 'CA0630CA', 452: '2F46E12F', 456: '7EE8F67E', 460: '2042E720', 464: '2CF0932C', 468: 'C0B1CDC0', 472: '90D23790', 476: 'D2832AD2', 480: '342FA034', 484: '66FC1266', 488: 'A19285A1', 492: '59679459', 496: '042C7804', 500: '84CF4084', 504: 'C9B7C4C9', 508: '2E48E62E', 512: '274EEF27', 516: '674ADC67', 520: 'B8030FB8', 524: '3F29A23F', 528: 'BEB8B6BE', 532: 'E78E6FE7', 536: 'D0812DD0', 540: '28F39F28', 544: '863CF286', 548: '463F5146', 552: 'D48F20D4', 556: '3B25A53B', 560: '9D15C79D', 564: 'A2E35AA2', 568: '7FE6F17F', 572: 'FDA5D7FD', 576: '82C34A82', 580: '56ACE256', 584: '1C18B41C', 588: 'C2B3CAC2', 592: 'DA5670DA', 596: '70E2F770', 600: '0B2B7B0B', 604: 'FB6B1BFB', 608: 'A8948CA8', 612: 'C4BFC0C4', 616: 'CC0834CC', 620: '40C28740', 624: 'A7EA5CA7', 628: '5E60995E', 632: '21F19B21', 636: 'D78A2CD7', 640: '23F79623', 644: 'E08267E0', 648: 'EE8866EE', 652: '0A79280A', 656: 'B2B4BEB2', 660: '5DABED5D', 664: '1ED0091E', 668: '546F9054', 672: '49CD8349', 676: 'B30706B3', 680: '6041DD60', 684: '9BDB3B9B', 688: 'D35D79D3', 692: '244CE824', 696: 'CEB0C9CE', 700: 'F1A1DBF1', 704: '961FC196', 708: '2B4BEB2B', 712: '951ACE95', 716: '853EFA85', 720: 'E55AAEE5', 724: '759A4E75', 728: 'C30D39C3', 732: '99DD3399', 736: 'E98D63E9', 740: '644FD064', 744: 'A9E754A9', 748: 'E2846EE2', 752: '9ED8369E', 756: 'B0B2B7B0', 760: 'EC50A3EC', 764: 'C7BACCC7', 768: '80C14D80', 772: 'F06217F0', 776: 'BA0908BA', 780: '55AEEA55', 784: '3E20A93E', 788: 'BC0003BC', 792: '5B65955B', 796: '1D1BBD1D', 800: '7A99487A', 804: 'E151ABE1', 808: '4FC6814F', 812: '161CB216', 816: '0E28760E', 820: 'DD5B7DDD', 824: 'F76E1FF7', 828: '5CA8E45C', 832: '10D10D10', 836: 'FE6816FE', 840: 'A69C82A6', 844: 'B50A0EB5', 848: '78934F78', 852: '0F26710F', 856: 'A39D89A3', 860: 'FCA0D3FC', 864: '51A2E551', 868: '1112B511', 872: '43375643', 876: 'EB8B6BEB', 880: 'A59E8AA5', 884: '337D6933', 888: 'DB8525DB', 892: '77EEFF77', 896: '3C78643C', 900: 'F46C18F4', 904: 'C50E3AC5', 908: 'DC5874DC', 912: 'FAA9D8FA', 916: '9C10C39C', 920: '4BCB8B4B', 924: '8834FC88', 928: 'B7BEBFB7', 932: '14DF0014', 936: '26FF9126', 940: 'ABE555AB', 944: '8132F581', 948: 'CD0B3DCD', 952: '2244EE22', 956: 'F2641EF2', 960: '12D30A12', 964: '47CE8F47', 968: '08732F08', 972: '7C90437C', 976: 'E357A6E3', 980: '52639A52', 984: '7D95477D', 988: '769F4176', 992: 'AEE059AE', 996: '8BC5458B', 1000: '3223AA32', 1004: 'BD0507BD', 1008: '1FD9021F', 1012: '25FA9E25', 1016: '48335F48', 1020: '057A2E05' },
        'dict4': { 0: '1717DA0C', 4: '8A8A36F0', 8: '9A9A19C8', 12: '9797DE3F', 16: '4D4D3557', 20: '8C8C38F4', 24: 'D6D65C72', 28: '6D6DFB1D', 32: '8787CA4C', 36: 'CBCBB5C5', 40: '8F8FC942', 44: '6868F41C', 48: '6B6B45D5', 52: 'AFAFE952', 56: 'F9F96D13', 60: 'C8C8043C', 64: 'B6B60F01', 68: '6F6F49D2', 72: '36367C62', 76: '0D0D7527', 80: 'D9D98724', 84: '2A2AF998', 88: 'EFEF8661', 92: '0202247E', 96: '939317C6', 100: '09092D73', 104: '4A4A3958', 108: '6A6AF610', 112: '9292D43E', 116: '8989C744', 120: 'FFFF6611', 124: '4C4C3053', 128: '696947D4', 132: 'B9B9BDB3', 136: '626243DA', 140: '57576A9C', 144: 'DEDE8029', 148: '37372AAC', 152: '35357E6A', 156: '7272E4FE', 160: '1B1BD505', 164: 'D8D8547C', 168: '7979EDF3', 172: 'BFBFB6B1', 176: '9494DC38', 180: '07072E7F', 184: 'B4B4BCB8', 188: '0101712B', 192: 'C1C10235', 196: 'D5D55E7A', 200: '00002277', 204: '7171914B', 208: 'ADAD9B8D', 212: '3D3D7B6D', 216: '6363FD19', 220: 'D1D15275', 224: '1919D704', 228: 'DFDF8922', 232: '4444CC88', 236: '303021AD', 240: 'ACAC9884', 244: '03037726', 248: '13131DB9', 252: 'EDED55A7', 256: 'A0A0E15D', 260: 'E8E853AF', 264: '3A3A7660', 268: '4141315B', 272: 'C6C60C32', 276: '2D2DF597', 280: 'F8F8A3DF', 284: 'BBBBBBBB', 288: '5353ADE9', 292: '45453A5E', 296: 'F6F6AFD1', 300: '4242C48E', 304: '6C6CF814', 308: '6565FE1A', 312: '5050619D', 316: '7B7BEBFB', 320: '6161F215', 324: 'E6E65FA1', 328: 'EAEA59A8', 332: '83833DF9', 336: 'A4A4EF50', 340: '3838746C', 344: 'E4E48C68', 348: '29294DE3', 352: 'CFCFB9C2', 356: '8D8D3BFD', 360: '989813CF', 364: '393927A4', 368: 'B1B1010B', 372: '4E4EC886', 376: 'F3F3A7D6', 380: '1A1A16B0', 384: '919111CB', 388: '31317265', 392: '73739746', 396: '15151EBA', 400: '8E8EC049', 404: '0C0C7023', 408: 'F5F5AADE', 412: '7474ECF8', 416: '9F9FD631', 420: '6E6E40D9', 424: '5A5AA6E0', 428: '5858A4EC', 432: '181814BC', 436: 'AAAA9680', 440: '5F5F6992', 444: '06067F21', 448: 'CACA0630', 452: '2F2F46E1', 456: '7E7EE8F6', 460: '202042E7', 464: '2C2CF093', 468: 'C0C0B1CD', 472: '9090D237', 476: 'D2D2832A', 480: '34342FA0', 484: '6666FC12', 488: 'A1A19285', 492: '59596794', 496: '04042C78', 500: '8484CF40', 504: 'C9C9B7C4', 508: '2E2E48E6', 512: '27274EEF', 516: '67674ADC', 520: 'B8B8030F', 524: '3F3F29A2', 528: 'BEBEB8B6', 532: 'E7E78E6F', 536: 'D0D0812D', 540: '2828F39F', 544: '86863CF2', 548: '46463F51', 552: 'D4D48F20', 556: '3B3B25A5', 560: '9D9D15C7', 564: 'A2A2E35A', 568: '7F7FE6F1', 572: 'FDFDA5D7', 576: '8282C34A', 580: '5656ACE2', 584: '1C1C18B4', 588: 'C2C2B3CA', 592: 'DADA5670', 596: '7070E2F7', 600: '0B0B2B7B', 604: 'FBFB6B1B', 608: 'A8A8948C', 612: 'C4C4BFC0', 616: 'CCCC0834', 620: '4040C287', 624: 'A7A7EA5C', 628: '5E5E6099', 632: '2121F19B', 636: 'D7D78A2C', 640: '2323F796', 644: 'E0E08267', 648: 'EEEE8866', 652: '0A0A7928', 656: 'B2B2B4BE', 660: '5D5DABED', 664: '1E1ED009', 668: '54546F90', 672: '4949CD83', 676: 'B3B30706', 680: '606041DD', 684: '9B9BDB3B', 688: 'D3D35D79', 692: '24244CE8', 696: 'CECEB0C9', 700: 'F1F1A1DB', 704: '96961FC1', 708: '2B2B4BEB', 712: '95951ACE', 716: '85853EFA', 720: 'E5E55AAE', 724: '75759A4E', 728: 'C3C30D39', 732: '9999DD33', 736: 'E9E98D63', 740: '64644FD0', 744: 'A9A9E754', 748: 'E2E2846E', 752: '9E9ED836', 756: 'B0B0B2B7', 760: 'ECEC50A3', 764: 'C7C7BACC', 768: '8080C14D', 772: 'F0F06217', 776: 'BABA0908', 780: '5555AEEA', 784: '3E3E20A9', 788: 'BCBC0003', 792: '5B5B6595', 796: '1D1D1BBD', 800: '7A7A9948', 804: 'E1E151AB', 808: '4F4FC681', 812: '16161CB2', 816: '0E0E2876', 820: 'DDDD5B7D', 824: 'F7F76E1F', 828: '5C5CA8E4', 832: '1010D10D', 836: 'FEFE6816', 840: 'A6A69C82', 844: 'B5B50A0E', 848: '7878934F', 852: '0F0F2671', 856: 'A3A39D89', 860: 'FCFCA0D3', 864: '5151A2E5', 868: '111112B5', 872: '43433756', 876: 'EBEB8B6B', 880: 'A5A59E8A', 884: '33337D69', 888: 'DBDB8525', 892: '7777EEFF', 896: '3C3C7864', 900: 'F4F46C18', 904: 'C5C50E3A', 908: 'DCDC5874', 912: 'FAFAA9D8', 916: '9C9C10C3', 920: '4B4BCB8B', 924: '888834FC', 928: 'B7B7BEBF', 932: '1414DF00', 936: '2626FF91', 940: 'ABABE555', 944: '818132F5', 948: 'CDCD0B3D', 952: '222244EE', 956: 'F2F2641E', 960: '1212D30A', 964: '4747CE8F', 968: '0808732F', 972: '7C7C9043', 976: 'E3E357A6', 980: '5252639A', 984: '7D7D9547', 988: '76769F41', 992: 'AEAEE059', 996: '8B8BC545', 1000: '323223AA', 1004: 'BDBD0507', 1008: '1F1FD902', 1012: '2525FA9E', 1016: '4848335F', 1020: '05057A2E' },
        'dict5': { 0: '17', 1: '8A', 2: '9A', 3: '97', 4: '4D', 5: '8C', 6: 'D6', 7: '6D', 8: '87', 9: 'CB', 10: '8F', 11: '68', 12: '6B', 13: 'AF', 14: 'F9', 15: 'C8', 16: 'B6', 17: '6F', 18: '36', 19: '0D', 20: 'D9', 21: '2A', 22: 'EF', 23: '02', 24: '93', 25: '09', 26: '4A', 27: '6A', 28: '92', 29: '89', 30: 'FF', 31: '4C', 32: '69', 33: 'B9', 34: '62', 35: '57', 36: 'DE', 37: '37', 38: '35', 39: '72', 40: '1B', 41: 'D8', 42: '79', 43: 'BF', 44: '94', 45: '07', 46: 'B4', 47: '01', 48: 'C1', 49: 'D5', 50: '00', 51: '71', 52: 'AD', 53: '3D', 54: '63', 55: 'D1', 56: '19', 57: 'DF', 58: '44', 59: '30', 60: 'AC', 61: '03', 62: '13', 63: 'ED', 64: 'A0', 65: 'E8', 66: '3A', 67: '41', 68: 'C6', 69: '2D', 70: 'F8', 71: 'BB', 72: '53', 73: '45', 74: 'F6', 75: '42', 76: '6C', 77: '65', 78: '50', 79: '7B', 80: '61', 81: 'E6', 82: 'EA', 83: '83', 84: 'A4', 85: '38', 86: 'E4', 87: '29', 88: 'CF', 89: '8D', 90: '98', 91: '39', 92: 'B1', 93: '4E', 94: 'F3', 95: '1A', 96: '91', 97: '31', 98: '73', 99: '15', 100: '8E', 101: '0C', 102: 'F5', 103: '74', 104: '9F', 105: '6E', 106: '5A', 107: '58', 108: '18', 109: 'AA', 110: '5F', 111: '06', 112: 'CA', 113: '2F', 114: '7E', 115: '20', 116: '2C', 117: 'C0', 118: '90', 119: 'D2', 120: '34', 121: '66', 122: 'A1', 123: '59', 124: '04', 125: '84', 126: 'C9', 127: '2E', 128: '27', 129: '67', 130: 'B8', 131: '3F', 132: 'BE', 133: 'E7', 134: 'D0', 135: '28', 136: '86', 137: '46', 138: 'D4', 139: '3B', 140: '9D', 141: 'A2', 142: '7F', 143: 'FD', 144: '82', 145: '56', 146: '1C', 147: 'C2', 148: 'DA', 149: '70', 150: '0B', 151: 'FB', 152: 'A8', 153: 'C4', 154: 'CC', 155: '40', 156: 'A7', 157: '5E', 158: '21', 159: 'D7', 160: '23', 161: 'E0', 162: 'EE', 163: '0A', 164: 'B2', 165: '5D', 166: '1E', 167: '54', 168: '49', 169: 'B3', 170: '60', 171: '9B', 172: 'D3', 173: '24', 174: 'CE', 175: 'F1', 176: '96', 177: '2B', 178: '95', 179: '85', 180: 'E5', 181: '75', 182: 'C3', 183: '99', 184: 'E9', 185: '64', 186: 'A9', 187: 'E2', 188: '9E', 189: 'B0', 190: 'EC', 191: 'C7', 192: '80', 193: 'F0', 194: 'BA', 195: '55', 196: '3E', 197: 'BC', 198: '5B', 199: '1D', 200: '7A', 201: 'E1', 202: '4F', 203: '16', 204: '0E', 205: 'DD', 206: 'F7', 207: '5C', 208: '10', 209: 'FE', 210: 'A6', 211: 'B5', 212: '78', 213: '0F', 214: 'A3', 215: 'FC', 216: '51', 217: '11', 218: '43', 219: 'EB', 220: 'A5', 221: '33', 222: 'DB', 223: '77', 224: '3C', 225: 'F4', 226: 'C5', 227: 'DC', 228: 'FA', 229: '9C', 230: '4B', 231: '88', 232: 'B7', 233: '14', 234: '26', 235: 'AB', 236: '81', 237: 'CD', 238: '22', 239: 'F2', 240: '12', 241: '47', 242: '08', 243: '7C', 244: 'E3', 245: '52', 246: '7D', 247: '76', 248: 'AE', 249: '8B', 250: '32', 251: 'BD', 252: '1F', 253: '25', 254: '48', 255: '05' },
        "input_arr": [187, 185, 186, 184, 179, 177, 178, 176, 191, 189, 190, 188, 183, 181, 182, 180, 155, 153, 154, 152, 147, 145, 146, 144, 159, 157, 158, 156, 151, 149, 150, 148, 171, 169, 170, 168, 163, 161, 162, 160, 175, 173, 174, 172, 167, 165, 166, 164, 139, 137, 138, 136, 131, 129, 130, 128, 143, 141, 142, 140, 135, 133, 134, 132, 59, 57, 58, 56, 51, 49, 50, 48, 63, 61, 62, 60, 55, 53, 54, 52, 27, 25, 26, 24, 19, 17, 18, 16, 31, 29, 30, 28, 23, 21, 22, 20, 43, 41, 42, 40, 35, 33, 34, 32, 47, 45, 46, 44, 39, 37, 38, 36, 11, 9, 10, 8, 3, 1, 2, 0, 15, 13, 14, 12, 7, 5, 6, 4, 251, 249, 250, 248, 243, 241, 242, 240, 255, 253, 254, 252, 247, 245, 246, 244, 219, 217, 218, 216, 211, 209, 210, 208, 223, 221, 222, 220, 215, 213, 214, 212, 235, 233, 234, 232, 227, 225, 226, 224, 239, 237, 238, 236, 231, 229, 230, 228, 203, 201, 202, 200, 195, 193, 194, 192, 207, 205, 206, 204, 199, 197, 198, 196, 123, 121, 122, 120, 115, 113, 114, 112, 127, 125, 126, 124, 119, 117, 118, 116, 91, 89, 90, 88, 83, 81, 82, 80, 95, 93, 94, 92, 87, 85, 86, 84, 107, 105, 106, 104, 99, 97, 98, 96, 111, 109, 110, 108, 103, 101, 102, 100, 75, 73, 74, 72, 67, 65, 66, 64, 79, 77, 78, 76, 71, 69, 70, 68],
        "iv_arr": [0, 2, 1, 3, 8, 10, 9, 11, 4, 6, 5, 7, 12, 14, 13, 15, 32, 34, 33, 35, 40, 42, 41, 43, 36, 38, 37, 39, 44, 46, 45, 47, 16, 18, 17, 19, 24, 26, 25, 27, 20, 22, 21, 23, 28, 30, 29, 31, 48, 50, 49, 51, 56, 58, 57, 59, 52, 54, 53, 55, 60, 62, 61, 63, 128, 130, 129, 131, 136, 138, 137, 139, 132, 134, 133, 135, 140, 142, 141, 143, 160, 162, 161, 163, 168, 170, 169, 171, 164, 166, 165, 167, 172, 174, 173, 175, 144, 146, 145, 147, 152, 154, 153, 155, 148, 150, 149, 151, 156, 158, 157, 159, 176, 178, 177, 179, 184, 186, 185, 187, 180, 182, 181, 183, 188, 190, 189, 191, 64, 66, 65, 67, 72, 74, 73, 75, 68, 70, 69, 71, 76, 78, 77, 79, 96, 98, 97, 99, 104, 106, 105, 107, 100, 102, 101, 103, 108, 110, 109, 111, 80, 82, 81, 83, 88, 90, 89, 91, 84, 86, 85, 87, 92, 94, 93, 95, 112, 114, 113, 115, 120, 122, 121, 123, 116, 118, 117, 119, 124, 126, 125, 127, 192, 194, 193, 195, 200, 202, 201, 203, 196, 198, 197, 199, 204, 206, 205, 207, 224, 226, 225, 227, 232, 234, 233, 235, 228, 230, 229, 231, 236, 238, 237, 239, 208, 210, 209, 211, 216, 218, 217, 219, 212, 214, 213, 215, 220, 222, 221, 223, 240, 242, 241, 243, 248, 250, 249, 251, 244, 246, 245, 247, 252, 254, 253, 255],
        "out_arr": [0, 2, 1, 3, 8, 10, 9, 11, 4, 6, 5, 7, 12, 14, 13, 15, 32, 34, 33, 35, 40, 42, 41, 43, 36, 38, 37, 39, 44, 46, 45, 47, 16, 18, 17, 19, 24, 26, 25, 27, 20, 22, 21, 23, 28, 30, 29, 31, 48, 50, 49, 51, 56, 58, 57, 59, 52, 54, 53, 55, 60, 62, 61, 63, 128, 130, 129, 131, 136, 138, 137, 139, 132, 134, 133, 135, 140, 142, 141, 143, 160, 162, 161, 163, 168, 170, 169, 171, 164, 166, 165, 167, 172, 174, 173, 175, 144, 146, 145, 147, 152, 154, 153, 155, 148, 150, 149, 151, 156, 158, 157, 159, 176, 178, 177, 179, 184, 186, 185, 187, 180, 182, 181, 183, 188, 190, 189, 191, 64, 66, 65, 67, 72, 74, 73, 75, 68, 70, 69, 71, 76, 78, 77, 79, 96, 98, 97, 99, 104, 106, 105, 107, 100, 102, 101, 103, 108, 110, 109, 111, 80, 82, 81, 83, 88, 90, 89, 91, 84, 86, 85, 87, 92, 94, 93, 95, 112, 114, 113, 115, 120, 122, 121, 123, 116, 118, 117, 119, 124, 126, 125, 127, 192, 194, 193, 195, 200, 202, 201, 203, 196, 198, 197, 199, 204, 206, 205, 207, 224, 226, 225, 227, 232, 234, 233, 235, 228, 230, 229, 231, 236, 238, 237, 239, 208, 210, 209, 211, 216, 218, 217, 219, 212, 214, 213, 215, 220, 222, 221, 223, 240, 242, 241, 243, 248, 250, 249, 251, 244, 246, 245, 247, 252, 254, 253, 255]
    };

    var decryptConf = {
        'key_schedule': [0x04, 0x1B, 0x2D, 0x3C, 0x41, 0x56, 0x61, 0x78, 0x88, 0x90, 0xAE, 0xB6, 0xC1, 0xDC, 0xEF, 0xF2, 0xD9, 0x4F, 0xCE, 0xEA, 0x19, 0x9E, 0xB6, 0xFC, 0xAB, 0x55, 0x88, 0x66, 0x24, 0x0F, 0x37, 0x7E, 0xB0, 0x38, 0x57, 0x1D, 0xEA, 0x28, 0xD4, 0xA6, 0xFE, 0xCA, 0x76, 0x0F, 0x94, 0x60, 0x4F, 0x86, 0x61, 0xE0, 0x99, 0x4C, 0x30, 0xC3, 0x01, 0x8C, 0x70, 0x27, 0xF1, 0xDC, 0x58, 0xB8, 0x1F, 0xA9, 0xA4, 0x29, 0x12, 0x52, 0xC7, 0x3F, 0xFC, 0xBC, 0xD0, 0xE1, 0x03, 0x7E, 0x46, 0x84, 0x9E, 0x64, 0x86, 0xC4, 0x44, 0x91, 0x20, 0xEB, 0x7B, 0x6B, 0x0C, 0x32, 0xD0, 0xF3, 0x16, 0xA4, 0x53, 0xB1, 0x73, 0x54, 0x3A, 0x2E, 0x97, 0x16, 0x86, 0x02, 0x6F, 0x44, 0xBB, 0xA0, 0xE5, 0xF2, 0xC1, 0xD2, 0xF4, 0x91, 0xEB, 0xC4, 0x55, 0x49, 0xAD, 0xDF, 0xB4, 0x1B, 0x65, 0x87, 0x33, 0x70, 0x24, 0x05, 0x46, 0xD9, 0x80, 0x6E, 0x0C, 0xF8, 0x3D, 0x96, 0x2D, 0x77, 0xC1, 0xE6, 0xAC, 0x12, 0xB4, 0x5F, 0x1E, 0x01, 0xAF, 0xBC, 0xDA, 0x78, 0xE8, 0x5C, 0xC0, 0xFF, 0x22, 0x3B, 0x82, 0x4E, 0x60, 0x95, 0xE9, 0x67, 0xF4, 0xD9, 0xBB, 0x89, 0x16, 0xC7, 0x53, 0xAD, 0x9F, 0x4F, 0x7F, 0x3E, 0x05, 0x20, 0x3C, 0xBD, 0x71, 0x08, 0x6B, 0xA8, 0x40, 0x23, 0x99, 0x8B, 0x53, 0x12, 0xF5, 0xE5, 0xDF, 0xC5, 0xCC, 0x88, 0xD7, 0xFC, 0xA5, 0x6C, 0x53, 0xE1, 0x1A, 0xB7, 0x46, 0x9B, 0x0A, 0x20, 0x73, 0x3D, 0x26, 0xA8, 0x08, 0x7A, 0x8F, 0xB3, 0x9A, 0x3D, 0x42, 0x66, 0x1A, 0x52, 0xD8, 0xC1, 0xF1, 0xEC, 0x93, 0xF9, 0x62, 0x83, 0x72, 0xD5, 0x26, 0x43, 0x3B, 0x07, 0xE1, 0xC0, 0xB9, 0x50, 0xA8, 0x14, 0x59, 0x74, 0xBC, 0xA1, 0xF3, 0x05, 0xC4, 0x17, 0xE0, 0xDF, 0x35, 0x20, 0x6A, 0x9A, 0x87, 0x42],
        's_box': [0xED, 0x6F, 0xF3, 0xDE, 0xBA, 0x82, 0x15, 0xCD, 0x5D, 0xAF, 0x95, 0x45, 0x73, 0x34, 0x06, 0x29, 0x68, 0xEE, 0x96, 0x43, 0x32, 0xCF, 0x07, 0x8C, 0x77, 0x2B, 0xF4, 0xDB, 0x5B, 0xBD, 0x18, 0xAF, 0xF9, 0x9A, 0xE2, 0xCB, 0x54, 0x4C, 0xAC, 0xD3, 0xB4, 0x1A, 0x61, 0x80, 0x32, 0x79, 0x23, 0x09, 0xD8, 0x44, 0xC4, 0xE2, 0x10, 0x96, 0xB0, 0xF2, 0xA9, 0x5A, 0x83, 0x69, 0x29, 0x03, 0x3D, 0x79, 0xB2, 0x34, 0x51, 0x12, 0xE4, 0x26, 0xD7, 0xAF, 0xFB, 0xCA, 0x74, 0x05, 0x92, 0x61, 0x4E, 0x8D, 0x88, 0xC6, 0x49, 0x9B, 0x20, 0xEC, 0x75, 0x65, 0x0D, 0x31, 0xDC, 0xFA, 0x19, 0xA5, 0x56, 0xB0, 0x15, 0x07, 0xA5, 0xB1, 0xDE, 0x7F, 0xE0, 0x5F, 0xCA, 0xF9, 0x29, 0x3E, 0x89, 0x41, 0x6D, 0x97, 0xC2, 0x8D, 0xDE, 0xF2, 0xA4, 0x60, 0x59, 0xEC, 0x14, 0xB0, 0x43, 0x90, 0x03, 0x2F, 0x7A, 0x32, 0x54, 0x70, 0xB6, 0xA7, 0xFA, 0x07, 0xCF, 0x11, 0xE6, 0xD3, 0x32, 0x26, 0x6D, 0x97, 0x87, 0x48, 0xAB, 0x2E, 0x12, 0x5A, 0xCC, 0x38, 0xFA, 0xB0, 0xD5, 0xEF, 0x05, 0x71, 0x40, 0x84, 0x9C, 0x66, 0x9D, 0xF7, 0x6D, 0x8E, 0x73, 0xD3, 0x27, 0x41, 0x3F, 0x0B, 0xE0, 0xC1, 0xB7, 0x5F, 0xA5, 0x14, 0x47, 0xD3, 0x80, 0x6D, 0x05, 0xF1, 0x33, 0x9A, 0x2E, 0x7D, 0xC8, 0xE2, 0xAB, 0x13, 0xBF, 0x5A, 0x71, 0x58, 0x3D, 0x27, 0x9D, 0x19, 0x8C, 0x08, 0x65, 0x4F, 0xB8, 0xA5, 0xEC, 0xF5, 0xC7, 0xDD, 0x34, 0xB8, 0x73, 0x04, 0x66, 0xAC, 0x41, 0x25, 0x93, 0x8E, 0x58, 0x19, 0xF9, 0xEA, 0xD8, 0xC0, 0x0C, 0x18, 0x20, 0x3D, 0x47, 0x58, 0x69, 0x71, 0x82, 0x9F, 0xAF, 0xBE, 0xC6, 0xD2, 0xE6, 0xF1, 0x28, 0xA1, 0x05, 0x7C, 0x83, 0xB9, 0x9B, 0x3A, 0x43, 0x62, 0x1E, 0x5D, 0xD7, 0xC8, 0xFF, 0xE5],
        'round_constants': [0x5C, 0xC0, 0x82, 0xEF, 0xDD, 0xA5, 0x66, 0x3B, 0x0E, 0xB1, 0x11, 0x7B, 0x9A, 0x44, 0xF7, 0x2F, 0xC8, 0x5B, 0x1C, 0x78, 0x4E, 0x3E, 0xFB, 0xAE, 0x90, 0x21, 0x80, 0xE2, 0x0C, 0xD8, 0x69, 0xB9, 0x8F, 0x18, 0x56, 0x3C, 0x0A, 0x73, 0xB9, 0xE2, 0xD9, 0x69, 0xCD, 0xA8, 0x44, 0x98, 0x22, 0xFB, 0xEA, 0x7F, 0x3D, 0x5E, 0x62, 0x19, 0xD0, 0x89, 0xB9, 0x0B, 0xA2, 0xC7, 0x20, 0xFE, 0x4A, 0x91, 0xD9, 0x4C, 0x0C, 0x65, 0x55, 0x22, 0xE9, 0xB4, 0x80, 0x30, 0x95, 0xFC, 0x1F, 0xCF, 0x7F, 0xAB, 0xAF, 0x35, 0x79, 0x1C, 0x29, 0x51, 0x99, 0xC2, 0xF1, 0x42, 0xE3, 0x86, 0x6E, 0xB0, 0x09, 0xD8, 0x61, 0xFB, 0xBD, 0xDA, 0xE7, 0x9A, 0x52, 0x04, 0x34, 0x85, 0x2A, 0x48, 0xA8, 0x71, 0xC4, 0x1E, 0x33, 0xA2, 0xE2, 0x89, 0xB1, 0xC5, 0x03, 0x5A, 0x6D, 0xD3, 0x75, 0x1C, 0xF9, 0x28, 0x97, 0x44, 0x0B, 0x9E, 0xD6, 0xBE, 0x88, 0xFA, 0x3C, 0x61, 0x56, 0xE3, 0x46, 0x2C, 0xC6, 0x13, 0xA4, 0x78, 0xBA, 0x27, 0x6A, 0x0E, 0x3A, 0x46, 0x88, 0xDA, 0xEA, 0x57, 0xF5, 0x9D, 0x72, 0xAB, 0x12, 0xC6, 0x1B, 0x8E, 0xC3, 0xA9, 0x97, 0xE4, 0x2F, 0x78, 0x42, 0xF5, 0x5E, 0x38, 0xDE, 0x0E, 0xB5, 0x6C, 0x77, 0xEF, 0xAE, 0xC4, 0xFF, 0x8A, 0x48, 0x18, 0x2B, 0x92, 0x3C, 0x54, 0xB4, 0x65, 0xDA, 0x0C, 0x93, 0x06, 0x43, 0x2E, 0x17, 0x64, 0xAF, 0xFD, 0xCB, 0x7C, 0xD7, 0xB9, 0x5E, 0x89, 0x30, 0xE9, 0x4D, 0xD9, 0x9C, 0xF1, 0xC6, 0xBB, 0x75, 0x25, 0x1B, 0xA2, 0x0C, 0x6F, 0x89, 0x51, 0xED, 0x31, 0xF9, 0x68, 0x25, 0x41, 0x7B, 0x0F, 0xC7, 0x9B, 0xAD, 0x12, 0xB2, 0xDC, 0x3F, 0xE8, 0x5F, 0x88, 0x27, 0xBD, 0xFD, 0x9B, 0xA5, 0xD4, 0x11, 0x41, 0x7A, 0xC6, 0x67, 0x0E, 0xE9, 0x3A, 0x81, 0x54],
        'dict1': { 0: '602ED000', 4: '7230645A', 8: '2274F1AE', 12: '6F801344', 16: 'A3DD1A8B', 20: 'EAB5C3F7', 24: '44099B86', 28: '6B87B779', 32: '33110EF8', 36: '4A0F389D', 40: '6E8E1846', 44: '3DD14557', 48: 'A7D31E81', 52: '92F05933', 56: 'BC96392A', 60: 'C52A37AB', 64: '38DC73E1', 68: 'C32D8BD2', 72: '55CC6D36', 76: '09AF57B2', 80: 'B89C8A40', 84: 'F148B8C2', 88: 'B57C2D06', 92: '1E3BB283', 96: 'FA45B3C7', 100: '6D21A131', 104: '31D86CD3', 108: 'D3FD3BE2', 112: '239DE3F3', 116: 'A112EB6C', 120: '2E9B5BCB', 124: 'E3E156D6', 128: '7E6E36FC', 132: '4D0D040F', 136: '47434645', 140: 'D9FF05A3', 144: '01C2F2E8', 148: 'C6229D50', 152: '1733FE91', 156: 'EFE0EAED', 160: '494F607B', 164: 'BE7E7C98', 168: '83BD726A', 172: 'F301D6E6', 176: '54A73E63', 180: '434D424A', 184: 'E7E652D4', 188: '3AD56BD0', 192: 'FC4614B3', 196: '32D024AA', 200: '2A7F16D9', 204: '00CB1F5D', 208: '89BF202B', 212: '703E6755', 216: '02C4115E', 220: 'D45922FE', 224: '80EB3D09', 228: 'DFF498D5', 232: 'DD5D6FB9', 236: '51A8964B', 240: '8EBB6A42', 244: '53C1289C', 248: '2C73B056', 252: '8FB46E47', 256: '4C03070C', 260: 'CA8F7EF4', 264: '5DA18075', 268: '9CF6EF0B', 272: '3CD64D52', 276: 'BA950261', 280: 'D85A26FD', 284: 'A9DFB13A', 288: 'BF707B99', 292: '71382CE3', 296: 'CB2934A1', 300: 'E1B8C8F2', 304: 'B4978E43', 308: '0CC3C0A6', 312: 'AFD4C690', 316: '90FE5030', 320: 'E8BC1BC5', 324: 'EEEEEEEE', 328: '57C6239F', 332: '8BB94F70', 336: '2793E8F0', 340: '4F442E67', 344: '1A6FAC4F', 348: 'E6E8A059', 352: '39153F16', 356: 'E0BEB5B1', 360: '5BC76534', 364: '8AEF888D', 368: '133DFA9B', 372: '153A1032', 376: '6427E692', 380: '0DCDC9A4', 384: 'CE2B03EA', 388: '0BA9ED15', 392: '186AD869', 396: 'B776638F', 400: 'A01BA474', 404: 'A6D2BF35', 408: '56C8770D', 412: '85BA4173', 416: 'B371688C', 420: '658CB478', 424: '0EABDBFB', 428: '37160AF9', 432: '6C26AF3B', 436: 'C92F9553', 440: 'B2909F72', 444: '3F1082CF', 448: '87B37665', 452: '30DE27A5', 456: '1C63557E', 460: 'F608E0A9', 464: '9658157F', 468: '756C091E', 472: 'FE0EAEDE', 476: '84E90B96', 480: '42048538', 484: '1469D368', 488: '94F7A682', 492: '299FD712', 496: '36183114', 500: '1162AB4C', 504: 'D6F20DA0', 508: '287ACEEF', 512: 'EBE7D1AF', 516: '73619EC8', 520: '88EA0C94', 524: '1B391937', 528: 'D05B791F', 532: '3B1790BD', 536: 'ABD9F907', 540: '2D7DB954', 544: 'AEDBC293', 548: '454A7123', 552: 'AC13D52E', 556: '106BE424', 560: 'D7F33CE7', 564: '59C5740E', 568: '766881B4', 572: '9B57C729', 576: '6381CC6E', 580: '9F50F364', 584: '79658FB6', 588: '81E2838E', 592: '6220D903', 596: 'A4195348', 600: 'ECB6F413', 604: 'EDB1F710', 608: 'DA5F4EC4', 612: '5CA6897A', 616: '9E5EF866', 620: '193FC10A', 624: 'E5ECDFAC', 628: '6985FD2C', 632: 'B678473D', 636: 'CF2408E5', 640: 'E4B71CCA', 644: 'F905E9A8', 648: '955CC428', 652: '77669AC9', 656: '91F8DE9A', 660: '743748DB', 664: '86B22921', 668: 'D1524AC6', 672: '5AA59241', 676: '0FA4DCF1', 680: '03ADA3C3', 684: '0ACFF6E9', 688: '9756BB4D', 692: '8DED943F', 696: '259AA5BA', 700: 'F04EC511', 704: '7D3175A7', 708: '61285E8A', 712: 'CD8D2F19', 716: 'FF00AADD', 720: '682CE297', 724: '99551D7C', 728: 'D5FA875B', 732: 'A214A776', 736: 'B975443E', 740: '82E43508', 744: '9351BC4E', 748: 'BD913025', 752: 'C7238CD7', 756: 'DBF98451', 760: 'C28440BC', 764: '4102339E', 768: 'A5DAF002', 772: '9AF5DA95', 776: '5ECE4C88', 780: 'AA1FEC6F', 784: '05AAE51A', 788: 'E9E5A958', 792: 'B09E9177', 796: 'DEFB93DA', 800: '207BFFAD', 804: '04C9BADC', 808: 'E2B0BDBB', 812: '400B8D39', 816: '2479CAEC', 820: '52A00F22', 824: '1F34B680', 828: 'F240CD1B', 832: '5FC04B89', 836: '783C43D1', 840: 'AD1DDD2D', 844: '58AC3A60', 848: '50AE0127', 852: 'FB07515F', 856: 'F706D2E4', 860: 'F50C5F5C', 864: 'F84CFBF5', 868: '7B67001D', 872: '6688F52F', 876: '7A352BE0', 880: '4E4B2A62', 884: 'B198066B', 888: '08CABEDF', 892: '34D778EB', 896: '6A255A85', 900: '1632CF05', 904: '9DF1E101', 908: '46426971', 912: '2F945CC1', 916: '6786CB6D', 920: 'BB772504', 924: '98FCA287', 928: 'DC5361B8', 932: '1D6D5D7D', 936: '7C367DA2', 940: '3E1E86CC', 944: '480A9C84', 948: '8CE3973C', 952: 'C48962CE', 956: '351C99BE', 960: 'CC832118', 964: 'FD4117B0', 968: '2692D417', 972: 'C08B49BF', 976: '1264E726', 980: 'F447FCFA', 984: '4B497F20', 988: 'C1827AF6', 992: '2B99ADB5', 996: '7F6032FF', 1000: 'C88A66CD', 1004: '07A3A8C0', 1008: 'D254701C', 1012: '217212D8', 1016: '06A254B7', 1020: 'A81A5849' },
        'dict2': { 0: '00602ED0', 4: '5A723064', 8: 'AE2274F1', 12: '446F8013', 16: '8BA3DD1A', 20: 'F7EAB5C3', 24: '8644099B', 28: '796B87B7', 32: 'F833110E', 36: '9D4A0F38', 40: '466E8E18', 44: '573DD145', 48: '81A7D31E', 52: '3392F059', 56: '2ABC9639', 60: 'ABC52A37', 64: 'E138DC73', 68: 'D2C32D8B', 72: '3655CC6D', 76: 'B209AF57', 80: '40B89C8A', 84: 'C2F148B8', 88: '06B57C2D', 92: '831E3BB2', 96: 'C7FA45B3', 100: '316D21A1', 104: 'D331D86C', 108: 'E2D3FD3B', 112: 'F3239DE3', 116: '6CA112EB', 120: 'CB2E9B5B', 124: 'D6E3E156', 128: 'FC7E6E36', 132: '0F4D0D04', 136: '45474346', 140: 'A3D9FF05', 144: 'E801C2F2', 148: '50C6229D', 152: '911733FE', 156: 'EDEFE0EA', 160: '7B494F60', 164: '98BE7E7C', 168: '6A83BD72', 172: 'E6F301D6', 176: '6354A73E', 180: '4A434D42', 184: 'D4E7E652', 188: 'D03AD56B', 192: 'B3FC4614', 196: 'AA32D024', 200: 'D92A7F16', 204: '5D00CB1F', 208: '2B89BF20', 212: '55703E67', 216: '5E02C411', 220: 'FED45922', 224: '0980EB3D', 228: 'D5DFF498', 232: 'B9DD5D6F', 236: '4B51A896', 240: '428EBB6A', 244: '9C53C128', 248: '562C73B0', 252: '478FB46E', 256: '0C4C0307', 260: 'F4CA8F7E', 264: '755DA180', 268: '0B9CF6EF', 272: '523CD64D', 276: '61BA9502', 280: 'FDD85A26', 284: '3AA9DFB1', 288: '99BF707B', 292: 'E371382C', 296: 'A1CB2934', 300: 'F2E1B8C8', 304: '43B4978E', 308: 'A60CC3C0', 312: '90AFD4C6', 316: '3090FE50', 320: 'C5E8BC1B', 324: 'EEEEEEEE', 328: '9F57C623', 332: '708BB94F', 336: 'F02793E8', 340: '674F442E', 344: '4F1A6FAC', 348: '59E6E8A0', 352: '1639153F', 356: 'B1E0BEB5', 360: '345BC765', 364: '8D8AEF88', 368: '9B133DFA', 372: '32153A10', 376: '926427E6', 380: 'A40DCDC9', 384: 'EACE2B03', 388: '150BA9ED', 392: '69186AD8', 396: '8FB77663', 400: '74A01BA4', 404: '35A6D2BF', 408: '0D56C877', 412: '7385BA41', 416: '8CB37168', 420: '78658CB4', 424: 'FB0EABDB', 428: 'F937160A', 432: '3B6C26AF', 436: '53C92F95', 440: '72B2909F', 444: 'CF3F1082', 448: '6587B376', 452: 'A530DE27', 456: '7E1C6355', 460: 'A9F608E0', 464: '7F965815', 468: '1E756C09', 472: 'DEFE0EAE', 476: '9684E90B', 480: '38420485', 484: '681469D3', 488: '8294F7A6', 492: '12299FD7', 496: '14361831', 500: '4C1162AB', 504: 'A0D6F20D', 508: 'EF287ACE', 512: 'AFEBE7D1', 516: 'C873619E', 520: '9488EA0C', 524: '371B3919', 528: '1FD05B79', 532: 'BD3B1790', 536: '07ABD9F9', 540: '542D7DB9', 544: '93AEDBC2', 548: '23454A71', 552: '2EAC13D5', 556: '24106BE4', 560: 'E7D7F33C', 564: '0E59C574', 568: 'B4766881', 572: '299B57C7', 576: '6E6381CC', 580: '649F50F3', 584: 'B679658F', 588: '8E81E283', 592: '036220D9', 596: '48A41953', 600: '13ECB6F4', 604: '10EDB1F7', 608: 'C4DA5F4E', 612: '7A5CA689', 616: '669E5EF8', 620: '0A193FC1', 624: 'ACE5ECDF', 628: '2C6985FD', 632: '3DB67847', 636: 'E5CF2408', 640: 'CAE4B71C', 644: 'A8F905E9', 648: '28955CC4', 652: 'C977669A', 656: '9A91F8DE', 660: 'DB743748', 664: '2186B229', 668: 'C6D1524A', 672: '415AA592', 676: 'F10FA4DC', 680: 'C303ADA3', 684: 'E90ACFF6', 688: '4D9756BB', 692: '3F8DED94', 696: 'BA259AA5', 700: '11F04EC5', 704: 'A77D3175', 708: '8A61285E', 712: '19CD8D2F', 716: 'DDFF00AA', 720: '97682CE2', 724: '7C99551D', 728: '5BD5FA87', 732: '76A214A7', 736: '3EB97544', 740: '0882E435', 744: '4E9351BC', 748: '25BD9130', 752: 'D7C7238C', 756: '51DBF984', 760: 'BCC28440', 764: '9E410233', 768: '02A5DAF0', 772: '959AF5DA', 776: '885ECE4C', 780: '6FAA1FEC', 784: '1A05AAE5', 788: '58E9E5A9', 792: '77B09E91', 796: 'DADEFB93', 800: 'AD207BFF', 804: 'DC04C9BA', 808: 'BBE2B0BD', 812: '39400B8D', 816: 'EC2479CA', 820: '2252A00F', 824: '801F34B6', 828: '1BF240CD', 832: '895FC04B', 836: 'D1783C43', 840: '2DAD1DDD', 844: '6058AC3A', 848: '2750AE01', 852: '5FFB0751', 856: 'E4F706D2', 860: '5CF50C5F', 864: 'F5F84CFB', 868: '1D7B6700', 872: '2F6688F5', 876: 'E07A352B', 880: '624E4B2A', 884: '6BB19806', 888: 'DF08CABE', 892: 'EB34D778', 896: '856A255A', 900: '051632CF', 904: '019DF1E1', 908: '71464269', 912: 'C12F945C', 916: '6D6786CB', 920: '04BB7725', 924: '8798FCA2', 928: 'B8DC5361', 932: '7D1D6D5D', 936: 'A27C367D', 940: 'CC3E1E86', 944: '84480A9C', 948: '3C8CE397', 952: 'CEC48962', 956: 'BE351C99', 960: '18CC8321', 964: 'B0FD4117', 968: '172692D4', 972: 'BFC08B49', 976: '261264E7', 980: 'FAF447FC', 984: '204B497F', 988: 'F6C1827A', 992: 'B52B99AD', 996: 'FF7F6032', 1000: 'CDC88A66', 1004: 'C007A3A8', 1008: '1CD25470', 1012: 'D8217212', 1016: 'B706A254', 1020: '49A81A58' },
        'dict3': { 0: 'D000602E', 4: '645A7230', 8: 'F1AE2274', 12: '13446F80', 16: '1A8BA3DD', 20: 'C3F7EAB5', 24: '9B864409', 28: 'B7796B87', 32: '0EF83311', 36: '389D4A0F', 40: '18466E8E', 44: '45573DD1', 48: '1E81A7D3', 52: '593392F0', 56: '392ABC96', 60: '37ABC52A', 64: '73E138DC', 68: '8BD2C32D', 72: '6D3655CC', 76: '57B209AF', 80: '8A40B89C', 84: 'B8C2F148', 88: '2D06B57C', 92: 'B2831E3B', 96: 'B3C7FA45', 100: 'A1316D21', 104: '6CD331D8', 108: '3BE2D3FD', 112: 'E3F3239D', 116: 'EB6CA112', 120: '5BCB2E9B', 124: '56D6E3E1', 128: '36FC7E6E', 132: '040F4D0D', 136: '46454743', 140: '05A3D9FF', 144: 'F2E801C2', 148: '9D50C622', 152: 'FE911733', 156: 'EAEDEFE0', 160: '607B494F', 164: '7C98BE7E', 168: '726A83BD', 172: 'D6E6F301', 176: '3E6354A7', 180: '424A434D', 184: '52D4E7E6', 188: '6BD03AD5', 192: '14B3FC46', 196: '24AA32D0', 200: '16D92A7F', 204: '1F5D00CB', 208: '202B89BF', 212: '6755703E', 216: '115E02C4', 220: '22FED459', 224: '3D0980EB', 228: '98D5DFF4', 232: '6FB9DD5D', 236: '964B51A8', 240: '6A428EBB', 244: '289C53C1', 248: 'B0562C73', 252: '6E478FB4', 256: '070C4C03', 260: '7EF4CA8F', 264: '80755DA1', 268: 'EF0B9CF6', 272: '4D523CD6', 276: '0261BA95', 280: '26FDD85A', 284: 'B13AA9DF', 288: '7B99BF70', 292: '2CE37138', 296: '34A1CB29', 300: 'C8F2E1B8', 304: '8E43B497', 308: 'C0A60CC3', 312: 'C690AFD4', 316: '503090FE', 320: '1BC5E8BC', 324: 'EEEEEEEE', 328: '239F57C6', 332: '4F708BB9', 336: 'E8F02793', 340: '2E674F44', 344: 'AC4F1A6F', 348: 'A059E6E8', 352: '3F163915', 356: 'B5B1E0BE', 360: '65345BC7', 364: '888D8AEF', 368: 'FA9B133D', 372: '1032153A', 376: 'E6926427', 380: 'C9A40DCD', 384: '03EACE2B', 388: 'ED150BA9', 392: 'D869186A', 396: '638FB776', 400: 'A474A01B', 404: 'BF35A6D2', 408: '770D56C8', 412: '417385BA', 416: '688CB371', 420: 'B478658C', 424: 'DBFB0EAB', 428: '0AF93716', 432: 'AF3B6C26', 436: '9553C92F', 440: '9F72B290', 444: '82CF3F10', 448: '766587B3', 452: '27A530DE', 456: '557E1C63', 460: 'E0A9F608', 464: '157F9658', 468: '091E756C', 472: 'AEDEFE0E', 476: '0B9684E9', 480: '85384204', 484: 'D3681469', 488: 'A68294F7', 492: 'D712299F', 496: '31143618', 500: 'AB4C1162', 504: '0DA0D6F2', 508: 'CEEF287A', 512: 'D1AFEBE7', 516: '9EC87361', 520: '0C9488EA', 524: '19371B39', 528: '791FD05B', 532: '90BD3B17', 536: 'F907ABD9', 540: 'B9542D7D', 544: 'C293AEDB', 548: '7123454A', 552: 'D52EAC13', 556: 'E424106B', 560: '3CE7D7F3', 564: '740E59C5', 568: '81B47668', 572: 'C7299B57', 576: 'CC6E6381', 580: 'F3649F50', 584: '8FB67965', 588: '838E81E2', 592: 'D9036220', 596: '5348A419', 600: 'F413ECB6', 604: 'F710EDB1', 608: '4EC4DA5F', 612: '897A5CA6', 616: 'F8669E5E', 620: 'C10A193F', 624: 'DFACE5EC', 628: 'FD2C6985', 632: '473DB678', 636: '08E5CF24', 640: '1CCAE4B7', 644: 'E9A8F905', 648: 'C428955C', 652: '9AC97766', 656: 'DE9A91F8', 660: '48DB7437', 664: '292186B2', 668: '4AC6D152', 672: '92415AA5', 676: 'DCF10FA4', 680: 'A3C303AD', 684: 'F6E90ACF', 688: 'BB4D9756', 692: '943F8DED', 696: 'A5BA259A', 700: 'C511F04E', 704: '75A77D31', 708: '5E8A6128', 712: '2F19CD8D', 716: 'AADDFF00', 720: 'E297682C', 724: '1D7C9955', 728: '875BD5FA', 732: 'A776A214', 736: '443EB975', 740: '350882E4', 744: 'BC4E9351', 748: '3025BD91', 752: '8CD7C723', 756: '8451DBF9', 760: '40BCC284', 764: '339E4102', 768: 'F002A5DA', 772: 'DA959AF5', 776: '4C885ECE', 780: 'EC6FAA1F', 784: 'E51A05AA', 788: 'A958E9E5', 792: '9177B09E', 796: '93DADEFB', 800: 'FFAD207B', 804: 'BADC04C9', 808: 'BDBBE2B0', 812: '8D39400B', 816: 'CAEC2479', 820: '0F2252A0', 824: 'B6801F34', 828: 'CD1BF240', 832: '4B895FC0', 836: '43D1783C', 840: 'DD2DAD1D', 844: '3A6058AC', 848: '012750AE', 852: '515FFB07', 856: 'D2E4F706', 860: '5F5CF50C', 864: 'FBF5F84C', 868: '001D7B67', 872: 'F52F6688', 876: '2BE07A35', 880: '2A624E4B', 884: '066BB198', 888: 'BEDF08CA', 892: '78EB34D7', 896: '5A856A25', 900: 'CF051632', 904: 'E1019DF1', 908: '69714642', 912: '5CC12F94', 916: 'CB6D6786', 920: '2504BB77', 924: 'A28798FC', 928: '61B8DC53', 932: '5D7D1D6D', 936: '7DA27C36', 940: '86CC3E1E', 944: '9C84480A', 948: '973C8CE3', 952: '62CEC489', 956: '99BE351C', 960: '2118CC83', 964: '17B0FD41', 968: 'D4172692', 972: '49BFC08B', 976: 'E7261264', 980: 'FCFAF447', 984: '7F204B49', 988: '7AF6C182', 992: 'ADB52B99', 996: '32FF7F60', 1000: '66CDC88A', 1004: 'A8C007A3', 1008: '701CD254', 1012: '12D82172', 1016: '54B706A2', 1020: '5849A81A' },
        'dict4': { 0: '2ED00060', 4: '30645A72', 8: '74F1AE22', 12: '8013446F', 16: 'DD1A8BA3', 20: 'B5C3F7EA', 24: '099B8644', 28: '87B7796B', 32: '110EF833', 36: '0F389D4A', 40: '8E18466E', 44: 'D145573D', 48: 'D31E81A7', 52: 'F0593392', 56: '96392ABC', 60: '2A37ABC5', 64: 'DC73E138', 68: '2D8BD2C3', 72: 'CC6D3655', 76: 'AF57B209', 80: '9C8A40B8', 84: '48B8C2F1', 88: '7C2D06B5', 92: '3BB2831E', 96: '45B3C7FA', 100: '21A1316D', 104: 'D86CD331', 108: 'FD3BE2D3', 112: '9DE3F323', 116: '12EB6CA1', 120: '9B5BCB2E', 124: 'E156D6E3', 128: '6E36FC7E', 132: '0D040F4D', 136: '43464547', 140: 'FF05A3D9', 144: 'C2F2E801', 148: '229D50C6', 152: '33FE9117', 156: 'E0EAEDEF', 160: '4F607B49', 164: '7E7C98BE', 168: 'BD726A83', 172: '01D6E6F3', 176: 'A73E6354', 180: '4D424A43', 184: 'E652D4E7', 188: 'D56BD03A', 192: '4614B3FC', 196: 'D024AA32', 200: '7F16D92A', 204: 'CB1F5D00', 208: 'BF202B89', 212: '3E675570', 216: 'C4115E02', 220: '5922FED4', 224: 'EB3D0980', 228: 'F498D5DF', 232: '5D6FB9DD', 236: 'A8964B51', 240: 'BB6A428E', 244: 'C1289C53', 248: '73B0562C', 252: 'B46E478F', 256: '03070C4C', 260: '8F7EF4CA', 264: 'A180755D', 268: 'F6EF0B9C', 272: 'D64D523C', 276: '950261BA', 280: '5A26FDD8', 284: 'DFB13AA9', 288: '707B99BF', 292: '382CE371', 296: '2934A1CB', 300: 'B8C8F2E1', 304: '978E43B4', 308: 'C3C0A60C', 312: 'D4C690AF', 316: 'FE503090', 320: 'BC1BC5E8', 324: 'EEEEEEEE', 328: 'C6239F57', 332: 'B94F708B', 336: '93E8F027', 340: '442E674F', 344: '6FAC4F1A', 348: 'E8A059E6', 352: '153F1639', 356: 'BEB5B1E0', 360: 'C765345B', 364: 'EF888D8A', 368: '3DFA9B13', 372: '3A103215', 376: '27E69264', 380: 'CDC9A40D', 384: '2B03EACE', 388: 'A9ED150B', 392: '6AD86918', 396: '76638FB7', 400: '1BA474A0', 404: 'D2BF35A6', 408: 'C8770D56', 412: 'BA417385', 416: '71688CB3', 420: '8CB47865', 424: 'ABDBFB0E', 428: '160AF937', 432: '26AF3B6C', 436: '2F9553C9', 440: '909F72B2', 444: '1082CF3F', 448: 'B3766587', 452: 'DE27A530', 456: '63557E1C', 460: '08E0A9F6', 464: '58157F96', 468: '6C091E75', 472: '0EAEDEFE', 476: 'E90B9684', 480: '04853842', 484: '69D36814', 488: 'F7A68294', 492: '9FD71229', 496: '18311436', 500: '62AB4C11', 504: 'F20DA0D6', 508: '7ACEEF28', 512: 'E7D1AFEB', 516: '619EC873', 520: 'EA0C9488', 524: '3919371B', 528: '5B791FD0', 532: '1790BD3B', 536: 'D9F907AB', 540: '7DB9542D', 544: 'DBC293AE', 548: '4A712345', 552: '13D52EAC', 556: '6BE42410', 560: 'F33CE7D7', 564: 'C5740E59', 568: '6881B476', 572: '57C7299B', 576: '81CC6E63', 580: '50F3649F', 584: '658FB679', 588: 'E2838E81', 592: '20D90362', 596: '195348A4', 600: 'B6F413EC', 604: 'B1F710ED', 608: '5F4EC4DA', 612: 'A6897A5C', 616: '5EF8669E', 620: '3FC10A19', 624: 'ECDFACE5', 628: '85FD2C69', 632: '78473DB6', 636: '2408E5CF', 640: 'B71CCAE4', 644: '05E9A8F9', 648: '5CC42895', 652: '669AC977', 656: 'F8DE9A91', 660: '3748DB74', 664: 'B2292186', 668: '524AC6D1', 672: 'A592415A', 676: 'A4DCF10F', 680: 'ADA3C303', 684: 'CFF6E90A', 688: '56BB4D97', 692: 'ED943F8D', 696: '9AA5BA25', 700: '4EC511F0', 704: '3175A77D', 708: '285E8A61', 712: '8D2F19CD', 716: '00AADDFF', 720: '2CE29768', 724: '551D7C99', 728: 'FA875BD5', 732: '14A776A2', 736: '75443EB9', 740: 'E4350882', 744: '51BC4E93', 748: '913025BD', 752: '238CD7C7', 756: 'F98451DB', 760: '8440BCC2', 764: '02339E41', 768: 'DAF002A5', 772: 'F5DA959A', 776: 'CE4C885E', 780: '1FEC6FAA', 784: 'AAE51A05', 788: 'E5A958E9', 792: '9E9177B0', 796: 'FB93DADE', 800: '7BFFAD20', 804: 'C9BADC04', 808: 'B0BDBBE2', 812: '0B8D3940', 816: '79CAEC24', 820: 'A00F2252', 824: '34B6801F', 828: '40CD1BF2', 832: 'C04B895F', 836: '3C43D178', 840: '1DDD2DAD', 844: 'AC3A6058', 848: 'AE012750', 852: '07515FFB', 856: '06D2E4F7', 860: '0C5F5CF5', 864: '4CFBF5F8', 868: '67001D7B', 872: '88F52F66', 876: '352BE07A', 880: '4B2A624E', 884: '98066BB1', 888: 'CABEDF08', 892: 'D778EB34', 896: '255A856A', 900: '32CF0516', 904: 'F1E1019D', 908: '42697146', 912: '945CC12F', 916: '86CB6D67', 920: '772504BB', 924: 'FCA28798', 928: '5361B8DC', 932: '6D5D7D1D', 936: '367DA27C', 940: '1E86CC3E', 944: '0A9C8448', 948: 'E3973C8C', 952: '8962CEC4', 956: '1C99BE35', 960: '832118CC', 964: '4117B0FD', 968: '92D41726', 972: '8B49BFC0', 976: '64E72612', 980: '47FCFAF4', 984: '497F204B', 988: '827AF6C1', 992: '99ADB52B', 996: '6032FF7F', 1000: '8A66CDC8', 1004: 'A3A8C007', 1008: '54701CD2', 1012: '7212D821', 1016: 'A254B706', 1020: '1A5849A8' },
        'dict5': { 0: '80', 1: '33', 2: 'BC', 3: '29', 4: '67', 5: '1C', 6: '12', 7: '47', 8: '5F', 9: 'F2', 10: '2C', 11: 'F3', 12: '6A', 13: 'FB', 14: '05', 15: 'A8', 16: 'CD', 17: '55', 18: 'D3', 19: '64', 20: '3F', 21: '39', 22: '63', 23: '5A', 24: '3C', 25: '3B', 26: 'BD', 27: '25', 28: 'A0', 29: '90', 30: 'EB', 31: 'A4', 32: '68', 33: 'B8', 34: 'E3', 35: '4F', 36: '37', 37: 'E8', 38: 'DA', 39: 'E4', 40: '5D', 41: '76', 42: '41', 43: '74', 44: '18', 45: 'E1', 46: 'AE', 47: 'B6', 48: '97', 49: '13', 50: '1A', 51: '09', 52: '2D', 53: '31', 54: '0C', 55: '93', 56: '9F', 57: '65', 58: '86', 59: 'FF', 60: '73', 61: 'ED', 62: 'C9', 63: '71', 64: 'BF', 65: 'B3', 66: 'B2', 67: '10', 68: 'F1', 69: '88', 70: '91', 71: '79', 72: '7D', 73: '0D', 74: 'AF', 75: '19', 76: '38', 77: '99', 78: '27', 79: 'F0', 80: 'F9', 81: 'EE', 82: 'E6', 83: '6D', 84: 'AB', 85: 'A1', 86: 'CB', 87: 'DB', 88: 'E5', 89: 'B7', 90: 'D1', 91: '82', 92: 'D7', 93: 'EC', 94: '0E', 95: '9C', 96: 'D2', 97: '24', 98: 'B0', 99: '46', 100: '84', 101: '7C', 102: '53', 103: '66', 104: '4D', 105: '4A', 106: '4B', 107: '58', 108: '30', 109: 'EF', 110: '92', 111: 'DF', 112: '43', 113: '11', 114: '14', 115: '6B', 116: 'AA', 117: '72', 118: '4E', 119: '32', 120: 'C8', 121: 'BB', 122: 'BE', 123: 'D4', 124: 'E2', 125: 'C0', 126: '48', 127: 'F7', 128: '50', 129: '2F', 130: '35', 131: 'E9', 132: '3D', 133: 'A5', 134: '49', 135: 'CC', 136: '2A', 137: 'D6', 138: '34', 139: 'F4', 140: '22', 141: '51', 142: '42', 143: 'E7', 144: '69', 145: '59', 146: '45', 147: '85', 148: '8B', 149: '0B', 150: 'C7', 151: 'CA', 152: '03', 153: 'B5', 154: '5C', 155: 'A9', 156: '5B', 157: '77', 158: '23', 159: 'D5', 160: 'FC', 161: '60', 162: 'EA', 163: '28', 164: 'C4', 165: '96', 166: '26', 167: '01', 168: 'F8', 169: '40', 170: '70', 171: '3A', 172: 'DC', 173: '08', 174: '5E', 175: '07', 176: '83', 177: '94', 178: 'F6', 179: '44', 180: '04', 181: 'A7', 182: '78', 183: '8E', 184: '21', 185: '98', 186: 'D9', 187: '02', 188: '52', 189: '7F', 190: '16', 191: 'F5', 192: '4C', 193: 'CE', 194: 'A6', 195: '9B', 196: '2E', 197: 'D0', 198: '95', 199: '62', 200: 'B9', 201: '8A', 202: 'BA', 203: 'CF', 204: 'FA', 205: 'C2', 206: '57', 207: '0A', 208: 'AD', 209: '9D', 210: '3E', 211: '1F', 212: 'C5', 213: '20', 214: '7E', 215: '2B', 216: '89', 217: '75', 218: '7A', 219: '06', 220: 'A3', 221: '8F', 222: '87', 223: 'C6', 224: '9E', 225: 'AC', 226: '1B', 227: '56', 228: 'E0', 229: '6C', 230: '61', 231: 'B4', 232: '8D', 233: '1E', 234: '81', 235: 'D8', 236: '15', 237: '0F', 238: 'C3', 239: 'A2', 240: 'FD', 241: '9A', 242: 'DE', 243: '1D', 244: 'FE', 245: '8C', 246: 'DD', 247: 'B1', 248: '54', 249: '6F', 250: 'C1', 251: '7B', 252: '36', 253: '17', 254: '6E', 255: '00' },
        'input_arr': [0, 2, 1, 3, 4, 6, 5, 7, 8, 10, 9, 11, 12, 14, 13, 15, 32, 34, 33, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 46, 45, 47, 16, 18, 17, 19, 20, 22, 21, 23, 24, 26, 25, 27, 28, 30, 29, 31, 48, 50, 49, 51, 52, 54, 53, 55, 56, 58, 57, 59, 60, 62, 61, 63, 64, 66, 65, 67, 68, 70, 69, 71, 72, 74, 73, 75, 76, 78, 77, 79, 96, 98, 97, 99, 100, 102, 101, 103, 104, 106, 105, 107, 108, 110, 109, 111, 80, 82, 81, 83, 84, 86, 85, 87, 88, 90, 89, 91, 92, 94, 93, 95, 112, 114, 113, 115, 116, 118, 117, 119, 120, 122, 121, 123, 124, 126, 125, 127, 128, 130, 129, 131, 132, 134, 133, 135, 136, 138, 137, 139, 140, 142, 141, 143, 160, 162, 161, 163, 164, 166, 165, 167, 168, 170, 169, 171, 172, 174, 173, 175, 144, 146, 145, 147, 148, 150, 149, 151, 152, 154, 153, 155, 156, 158, 157, 159, 176, 178, 177, 179, 180, 182, 181, 183, 184, 186, 185, 187, 188, 190, 189, 191, 192, 194, 193, 195, 196, 198, 197, 199, 200, 202, 201, 203, 204, 206, 205, 207, 224, 226, 225, 227, 228, 230, 229, 231, 232, 234, 233, 235, 236, 238, 237, 239, 208, 210, 209, 211, 212, 214, 213, 215, 216, 218, 217, 219, 220, 222, 221, 223, 240, 242, 241, 243, 244, 246, 245, 247, 248, 250, 249, 251, 252, 254, 253, 255],
        'iv_arr': [0, 2, 1, 3, 4, 6, 5, 7, 8, 10, 9, 11, 12, 14, 13, 15, 32, 34, 33, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 46, 45, 47, 16, 18, 17, 19, 20, 22, 21, 23, 24, 26, 25, 27, 28, 30, 29, 31, 48, 50, 49, 51, 52, 54, 53, 55, 56, 58, 57, 59, 60, 62, 61, 63, 64, 66, 65, 67, 68, 70, 69, 71, 72, 74, 73, 75, 76, 78, 77, 79, 96, 98, 97, 99, 100, 102, 101, 103, 104, 106, 105, 107, 108, 110, 109, 111, 80, 82, 81, 83, 84, 86, 85, 87, 88, 90, 89, 91, 92, 94, 93, 95, 112, 114, 113, 115, 116, 118, 117, 119, 120, 122, 121, 123, 124, 126, 125, 127, 128, 130, 129, 131, 132, 134, 133, 135, 136, 138, 137, 139, 140, 142, 141, 143, 160, 162, 161, 163, 164, 166, 165, 167, 168, 170, 169, 171, 172, 174, 173, 175, 144, 146, 145, 147, 148, 150, 149, 151, 152, 154, 153, 155, 156, 158, 157, 159, 176, 178, 177, 179, 180, 182, 181, 183, 184, 186, 185, 187, 188, 190, 189, 191, 192, 194, 193, 195, 196, 198, 197, 199, 200, 202, 201, 203, 204, 206, 205, 207, 224, 226, 225, 227, 228, 230, 229, 231, 232, 234, 233, 235, 236, 238, 237, 239, 208, 210, 209, 211, 212, 214, 213, 215, 216, 218, 217, 219, 220, 222, 221, 223, 240, 242, 241, 243, 244, 246, 245, 247, 248, 250, 249, 251, 252, 254, 253, 255],
        'out_arr': [102, 100, 103, 101, 98, 96, 99, 97, 110, 108, 111, 109, 106, 104, 107, 105, 70, 68, 71, 69, 66, 64, 67, 65, 78, 76, 79, 77, 74, 72, 75, 73, 118, 116, 119, 117, 114, 112, 115, 113, 126, 124, 127, 125, 122, 120, 123, 121, 86, 84, 87, 85, 82, 80, 83, 81, 94, 92, 95, 93, 90, 88, 91, 89, 38, 36, 39, 37, 34, 32, 35, 33, 46, 44, 47, 45, 42, 40, 43, 41, 6, 4, 7, 5, 2, 0, 3, 1, 14, 12, 15, 13, 10, 8, 11, 9, 54, 52, 55, 53, 50, 48, 51, 49, 62, 60, 63, 61, 58, 56, 59, 57, 22, 20, 23, 21, 18, 16, 19, 17, 30, 28, 31, 29, 26, 24, 27, 25, 230, 228, 231, 229, 226, 224, 227, 225, 238, 236, 239, 237, 234, 232, 235, 233, 198, 196, 199, 197, 194, 192, 195, 193, 206, 204, 207, 205, 202, 200, 203, 201, 246, 244, 247, 245, 242, 240, 243, 241, 254, 252, 255, 253, 250, 248, 251, 249, 214, 212, 215, 213, 210, 208, 211, 209, 222, 220, 223, 221, 218, 216, 219, 217, 166, 164, 167, 165, 162, 160, 163, 161, 174, 172, 175, 173, 170, 168, 171, 169, 134, 132, 135, 133, 130, 128, 131, 129, 142, 140, 143, 141, 138, 136, 139, 137, 182, 180, 183, 181, 178, 176, 179, 177, 190, 188, 191, 189, 186, 184, 187, 185, 150, 148, 151, 149, 146, 144, 147, 145, 158, 156, 159, 157, 154, 152, 155, 153]
    };

    return new LAESUtils(encryptConf, decryptConf)
}

const laes_utils = init_LAESUtils();
const LAESEncrypt = laes_utils.createEncryptor("541a3a5896fbefd351917c8251328a236a7efbf27d0fad8283ef59ef07aa386dbb2b1fcbba167135d575877ba0205a02f0aac2d31957bc7f028ed5888d4bbe69ed6768efc15ab703dc0f406b301845a0a64cf3c427c82870053bd7ba6721649c3a9aca8c3c31710a6be5ce71e4686842732d9314d6898cc3fdca075db46d1ccf3a7f9b20615f4a303c5235bd02c5cdc791eb123b9d9f7e72e954de3bcbf7d314064a1eced78d13679d040dd4080640d18c37bbde", [102, 48, 53, 53, 49, 56, 53, 54, 97, 97, 53, 55, 53, 102, 97, 97]);

const appVersion = "10.12.0"
const apiVersion = "101_1_1.0"
const appBuild = "21210"
const appBundle = "com.zhihu.android"
const appID = "1355"
const platformId = "12"

// 固定设备信息
const CustomDeviceInfo = {
    brand: "Google",
    model: "Pixel 9",
    androidVersion: "15",
    operator: "中国移动",
    // 随机生成32位OAID
    oaid: generateRandomHex(32)
};

const { URLSearchParams } = require('url');
const deviceInfo = generateZhihuFormdata()
const user_agent = `${appBundle}/Futureve/${appVersion} Mozilla/5.0 (Linux; Android ${CustomDeviceInfo.androidVersion}; ${CustomDeviceInfo.model} Build/AP3A.240617.008; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.1000.10 Mobile Safari/537.36`
const x_app_za = `OS=Android&Release=${CustomDeviceInfo.androidVersion}&Model=${CustomDeviceInfo.model}&VersionName=${appVersion}&VersionCode=${appBuild}&Product=${appBundle}&Installer=Google+Play&DeviceType=AndroidPhone&Brand=${CustomDeviceInfo.brand}`

function base64Encode(str) {
    // 将字符串转换为Buffer，然后直接转换为Base64字符串
    return Buffer.from(str, 'utf8').toString('base64');
}

function encrypt_data(data, isFormData = false) {
    if (!isFormData && typeof data !== 'string') {
        throw new Error('URL data must be a string');
    }
    if (isFormData && typeof data !== 'string') {
        throw new Error('Form data must be a string');
    }

    if (!isFormData) {
        const apiPrefix = 'https://api.zhihu.com';
        if (!data.startsWith(apiPrefix)) {
            throw new Error(`URL must start with ${apiPrefix}`);
        }
        const apiPath = data.slice(apiPrefix.length)
        data = `${apiVersion}+${apiPath}+${appVersion}+${this.accessToken}+${this.udid}`
        console.log(data)
        data = crypto.createHash('md5').update(data).digest('hex');
    } else {
        data = base64Encode(encodeURIComponent(data));
    }

    return LAESEncrypt(data);
}

function generateRandomHex(length) {
    return Array.from({ length }, () =>
        Math.floor(Math.random() * 16).toString(16)).join('').toUpperCase();
}

function generateRandomNumber(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function generateZhihuFormdata() {

    const fr_mem = generateRandomNumber(100, 500); // 剩余内存100-500MB
    const tt_mem = generateRandomNumber(400, 800); // 总内存400-800MB
    const storage = generateRandomNumber(50, 200); // 存储空间50-200GB
    const fr_st = storage * 1000; // 转换为MB单位
    const tt_st = (storage + generateRandomNumber(20, 100)) * 1000; // 总存储稍大

    const params = {
        "app_build": appBuild,
        "app_ticket": "fetch empty",
        "app_version": appVersion,
        "bt_ck": "1",
        "bundle_id": appBundle,
        "cp_ct": "8",
        "cp_fq": "3000000",
        "cp_tp": "0",
        "cp_us": "35",
        "d_n": "Pixel9",
        "fr_mem": fr_mem.toString(),
        "fr_st": fr_st.toString(),
        "latitude": "0",
        "longitude": "0",
        "mcc": "cn",
        "nt_st": "1",
        "oaid": CustomDeviceInfo.oaid,
        "ph_br": CustomDeviceInfo.brand,
        "ph_md": CustomDeviceInfo.model,
        "ph_os": `Android ${CustomDeviceInfo.androidVersion}`,
        "ph_sn": "unknown",
        "pre_install": "undefined",
        "pvd_nm": CustomDeviceInfo.operator,
        "tt_mem": tt_mem.toString(),
        "tt_st": tt_st.toString(),
        "tz_of": "28800",
        "zx_expired": "0"
    };

    return new URLSearchParams(params).toString();
}

function hmacSha1(key, message) {
    // 创建一个HMAC实例，使用sha1算法
    const hmac = crypto.createHmac('sha1', key);
    // 更新要计算的数据
    hmac.update(message);
    // 计算并返回小写的十六进制字符串
    return hmac.digest('hex');
}


function bytesToHex(binary) {
    // 字节转16进制字符串
    return binary.toString('hex');
}

function generateZhihuSignature(
    apiVersion,
    udid,
    backupDeviceId,
    deviceInfo,
    clientId,
    timestamp,
    secretKey
) {
    /**
     * 生成知乎API签名
     * @param {string} apiVersion - API版本号 (如 "2")
     * @param {string|null} udid - 设备id (可能为空)
     * @param {string|null} backupDeviceId - 备用设备ID
     * @param {string} deviceInfo - 设备信息字符串
     * @param {string} clientId - 客户端标识 (如 "1355")
     * @param {string} timestamp - 请求时间戳
     * @param {string} secretKey - 加密密钥
     * @return {string} 40位SHA1签名 (小写16进制)
     */

    let signatureBase;

    // 确定签名拼接模式
    if (!udid) {
        signatureBase = !backupDeviceId
            ? `${clientId}${apiVersion}${deviceInfo}${timestamp}`
            : `${clientId}${backupDeviceId}${deviceInfo}${timestamp}`;
    } else {
        signatureBase = `${clientId}${apiVersion}${deviceInfo}${udid}${timestamp}`;
    }

    // 计算签名
    const signature = hmacSha1(
        secretKey,
        signatureBase
    );

    return bytesToHex(signature);
}

async function getGuestToken() {
    const timestamp = Math.floor(Date.now() / 1000).toString();
    const signature = generateZhihuSignature(
        "2",                       // apiVersion
        null,                      // udid
        null,                      // backupDeviceId
        deviceInfo,                // deviceInfo
        appID,                    // clientId
        timestamp,                 // timestamp
        "dd49a835-56e7-4a0f-95b5-efd51ea5397f" // secretKey
    );
    const postdata = encrypt_data(signature, true);

    const headers = {
        'X-REQ-TS': timestamp,
        'x-app-id': appID,
        'x-sign-version': '2',
        'x-req-signature': signature,
        'X-Zse-93': apiVersion,
        'User-Agent': user_agent,
        'x-api-version': '3.0.93',
        'x-app-version': appVersion,
        'x-app-za': x_app_za,
        'Content-Type': 'application/x-www-form-urlencoded',
        'Authorization': 'oauth 8d5227e0aaaa4797a763ac64e0c3b8'
    };

    try {
        const response = await fetch('https://api.zhihu.com/api/account/prod/init/udid_guest', {
            method: 'POST',
            headers,
            body: postdata,
            credentials: 'include' // 携带cookie
        });

        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

        return response.json(); // 直接返回 JSON 数据
    } catch (error) {
        console.error('Request failed:', error);
        throw error; // 抛出错误以便外部处理
    }
}

class ZhihuRequest {
    /**
     * @param {Object} options
     * @param {Function} options.encryptData - 加密函数 (必须)
     * @param {Object} [options.loginData] - 登录数据 (必须)
     * @param {Array} [options.zsts] - zst81以及zst82
     * @param {Object} [options.defaultHeaders] - 默认请求头
     */
    constructor({ encryptData, loginData, zsts = [], defaultHeaders = {} }) {
        if (typeof encryptData !== 'function') {
            throw new Error('必须提供 encryptData 加密函数');
        }

        console.log('BindLoginData:', loginData);
        this.udid = loginData.udid
        if (this.udid == null) {
            throw Error("提供loginData缺少udid 请先使用游客登录获取udid 然后手动添加到loginData udid")
        }
        loginData = loginData.guest || loginData
        this.accessToken = "Bearer " + loginData.access_token
        this.cookie = Object.entries(loginData.cookie)
            .filter(([_, v]) => v) // 过滤空值
            .map(([k, v]) => `${k}=${v}`)
            .join('; ');

        const [zst82, zst81] = zsts;
        this.zst81 = zst81
        this.zst82 = zst82

        this.encryptData = encryptData.bind(this);
        this.defaultHeaders = {
            "User-Agent": user_agent,
            "x-api-version": "3.0.93",
            "x-app-version": appVersion,
            "x-app-za": x_app_za,
            "x-app-bundleid": appBundle,
            "x-app-flavor": "play",
            "x-app-build": "release",
            "x-Zse-93": apiVersion,
            ...(this.cookie && { "Cookie": this.cookie }),
            ...(this.accessToken && { "Authorization": this.accessToken }),
            ...(this.udid && { "x-udid": this.udid }),
            ...(this.zst81 && { "X-ZST-81": this.zst81 }),
            ...(this.zst82 && { "X-ZST-82": this.zst82 }),
            ...defaultHeaders,
        };
    }

    /**
     * 发送请求
     * @param {String} method - GET/POST/PATCH/PUT/DELETE
     * @param {String} url
     * @param {Object} [data] - 请求体 (非GET请求时使用)
     * @param {Object} [options]
     * @param {Object} [options.headers] - 额外请求头
     * @param {Boolean} [options.encryptBody] - 是否加密请求体 (默认: true)
     * @returns {Promise<Object>}
     */
    async request(method, url, data = {}, { headers = {}, encryptBody = true } = {}) {
        method = method.toUpperCase();
        const isGet = method === 'GET';

        //  构造请求头
        const requestHeaders = {
            ...this.defaultHeaders,
            ...headers,
            ...(isGet && {
                "x-Zse-96": `1.0_${this.encryptData(url)}`,
            }),
        };

        //  处理请求体
        let body = null;
        if (!isGet && data) {
            body = !data || Object.keys(data).length === 0
                ? ""
                : encryptBody
                    ? this.encryptData(data, true)
                    : JSON.stringify(data);

            requestHeaders["Content-Type"] = encryptBody
                ? "application/x-www-form-urlencoded"
                : "application/json";
        }

        // 发送请求
        try {
            console.log(requestHeaders)
            const response = await fetch(url, {
                method,
                headers: requestHeaders,
                body,
            });

            if (!response.ok) {
                const error = new Error(`HTTP ${response.status}`);
                error.response = response;
                throw error;
            }

            return response.json();
        } catch (error) {
            console.error(`[ZhihuRequest] ${method} ${url} failed:`, error);
            throw error;
        }
    }

    // 快捷方法
    get(url, options) {
        return this.request('GET', url, null, options);
    }

    post(url, data, options) {
        return this.request('POST', url, data, options);
    }

    patch(url, data, options) {
        return this.request('PATCH', url, data, options);
    }

    put(url, data, options) {
        return this.request('PUT', url, data, options);
    }

    delete(url, options) {
        return this.request('DELETE', url, null, options);
    }
}

async function getZst(authorization, udid = "", zst82 = "", zst81) {

    const LAESDecrypt = laes_utils.createDecryptor("77e8887a0ac9d3cf70842988a86ac2ad1d3548f611e6f04901114f9016bb16703c4d9409ab4faea557ea2620be0260192300dda0bf2ce816955aa8731ebc8f3075f8776071db7903b58e4a9ce0cecb61701c04790229e39139a03e66f3a94b0f593b3635671a3744a4403f0e5a90fd90336bb4151fbdcd81cab5e44f0779516df90de17ad5c9e1089a9dd63534cc40280dd77733884e71dec6ebcaa4e4376f2473ed6393c3dff6cdf1613d7047b42223e5d552a1", "18df3016faf4869c");
    function parseZst(data) {
        // 返回 zst82|zst81
        return LAESDecrypt(data).split("|")
    }

    function androidLikeBase64UrlSafe(base64, lineLength = 76) {
        // URL安全处理
        let result = base64
            .replace(/\+/g, '-')
            .replace(/\//g, '_')

        // 换行处理（默认76字符 Java MIME标准）
        if (lineLength > 0) {
            result = result.replace(new RegExp(`(.{${lineLength}})`, 'g'), '$1\n');
            if (!result.endsWith('\n')) result += '\n'; // 确保最后一行有换行
        }

        return result;
    }

    function generateUUID() {
        // 使用 crypto.getRandomValues 生成加密安全的随机数
        const array = new Uint8Array(16); // UUID是128位，即16字节
        crypto.getRandomValues(array);

        // 将每个字节转换为两位十六进制字符串，并拼接
        return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');
    }

    const timestamp = Date.now().toString();
    const storage = Math.floor(Math.random() * 151 + 50); // 50-200GB
    const fr_st = storage * 1000; // 转换为MB单位
    const tt_st = (storage + generateRandomNumber(20, 100)) * 1000; // 总存储稍大

    const postjson = {
        "app_version": appVersion,
        "icid": "0",
        "timezone": "28800",
        "api_version": "3.0.93",
        "free_storage": fr_st.toString(),
        "device_name": CustomDeviceInfo.model,
        "app_build": appBuild,
        "MSA-OAID": CustomDeviceInfo.oaid,
        "noti_settings": "0",
        "platform_id": platformId,
        "guid": generateUUID(),
        "action": "ZST_LAUNCH",
        "total_storage": tt_st.toString(),
        "is_dbg": "false",
        "cpu_usage": "Infinity",
        "app_id": appID,
        "phone_sn": "unknown"
    };
    // 这个加密函数是专门为ZST设计的
    function encryptZst(data) {
        const base64Data = androidLikeBase64UrlSafe(base64Encode(data));
        let padded = base64Data;
        const remainder = padded.length % 16;
        if (remainder !== 0) padded += '='.repeat(16 - remainder);

        const key = "8pf7FMb1hwkFj9ue7kqwnm84azWd5rE6";
        const iv = Buffer.from(key.substring(0, 16), 'utf8');
        const secretKey = Buffer.from(key, 'utf8');

        const cipher = crypto.createCipheriv('aes-256-cbc', secretKey, iv);
        cipher.setAutoPadding(false); // 禁用自动填充
        let encrypted = cipher.update(padded, 'utf8', 'base64');
        encrypted += cipher.final('base64');
        return androidLikeBase64UrlSafe(encrypted);
    }
    const postdata = encryptZst(JSON.stringify(postjson))
    const signature = hmacSha1("F1LiufZpstUlhDjSGu8PrgRQWyLd1d9E", appID + platformId + timestamp + postdata + udid + zst82)

    const headers = {
        'X-REQ-TS': timestamp,
        'X-APP-ID': appID,
        'X-PLATFORM-ID': platformId,
        'X-REQ-SIGNATURE': signature,
        'X-Zse-93': apiVersion,
        'User-Agent': user_agent,
        'x-app-version': appVersion,
        'x-app-za': x_app_za,
        'Authorization': authorization,
        ...(udid && { "x-udid": udid }),
        ...(zst82 && { "X-ZST-82": zst82 }),
        ...(zst81 && { "X-ZST-81": zst81 }),
        'Content-Type': 'application/x-www-form-urlencoded',
    };


    try {
        const response = await fetch('https://api.zhihu.com/zst/events/s', {
            method: 'POST',
            headers,
            body: postdata,
            credentials: 'include' // 携带cookie
        });

        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

        const json = await response.json()
        const result = parseZst(json.st_ruid);

        // zst82为空就递归调用 并且将 postjson 的 action 改为 ZST_AROUSE 然后返回
        if (!zst82) {
            postjson.action = "ZST_AROUSE"
            const [zst82, zst81] = result;
            return await getZst(authorization, udid, zst82, zst81);
        } else {
            return result
        }

    } catch (error) {
        console.error('Request failed:', error);
        throw error; // 抛出错误以便外部处理
    }
}

(async () => {
    const data = await getGuestToken()
    const zsts = await getZst("Bearer " + data.guest.access_token, data.udid)

    const zhihu = new ZhihuRequest({
        encryptData: encrypt_data,
        loginData: data,
        zsts: zsts
    });


    try {
        // GET 请求 (自动添加 x-Zse-93 和 x-Zse-96)
        const answer = await zhihu.get("https://api.zhihu.com/answers/v2/87117590856");
        console.log(answer);


    } catch (error) {
        console.error("请求失败:", error);
    }
})();